{
  "name": "services-bff",
  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "apps/services/bff/src",
  "projectType": "application",
  "prefix": "services-bff",
  "tags": ["scope:services-bff"],
  "targets": {
    "build": {
      "executor": "./tools/executors/node:build",
      "options": {
        "outputPath": "dist/apps/services/bff",
        "main": "apps/services/bff/src/main.ts",
        "tsConfig": "apps/services/bff/tsconfig.app.json",
        "maxWorkers": 2
      },
      "configurations": {
        "production": {
          "optimization": true,
          "extractLicenses": true,
          "inspect": false
        }
      },
      "outputs": ["{options.outputPath}"]
    },
    "serve": {
      "executor": "@nx/js:node",
      "options": {
        "buildTarget": "services-bff:build"
      }
    },
    "lint": {
      "executor": "@nx/eslint:lint"
    },
    "test": {
      "executor": "@nx/jest:jest",
      "options": {
        "jestConfig": "apps/services/bff/jest.config.ts",
        "runInBand": true
      },
      "outputs": ["{workspaceRoot}/coverage/apps/services/bff"]
    },
    "dev-services": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker compose -f scripts/docker-compose/redis-cluster.yml up -d"
      }
    },
    "dev": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["yarn start services-bff"],
        "parallel": true
      }
    },
    "docker-express": {
      "executor": "Intentionally left blank, only so this target is valid when using `nx show projects --with-target docker-express`"
    }
  }
}
