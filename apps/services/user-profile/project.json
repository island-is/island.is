{
  "name": "services-user-profile",
  "$schema": "../../../node_modules/nx/schemas/project-schema.json",
  "sourceRoot": "apps/services/user-profile/src",
  "projectType": "application",
  "prefix": "services-user-profile",
  "tags": ["scope:nest"],
  "generators": {},
  "targets": {
    "build": {
      "executor": "./tools/executors/node:build",
      "options": {
        "outputPath": "dist/apps/services/user-profile",
        "main": "apps/services/user-profile/src/main.ts",
        "tsConfig": "apps/services/user-profile/tsconfig.app.json",
        "assets": [
          "apps/services/user-profile/src/assets",
          {
            "glob": "*",
            "input": "apps/services/user-profile/migrations",
            "output": "./migrations"
          },
          {
            "glob": ".sequelizerc",
            "input": "apps/services/user-profile",
            "output": "./"
          },
          {
            "glob": "sequelize.config.js",
            "input": "apps/services/user-profile",
            "output": "./"
          },
          {
            "glob": "*",
            "input": "libs/email-service/src/tools/design",
            "output": "./email-service-assets"
          }
        ],
        "maxWorkers": 2
      },
      "configurations": {
        "production": {
          "optimization": true,
          "extractLicenses": true,
          "inspect": false
        }
      },
      "outputs": ["{options.outputPath}"]
    },
    "serve": {
      "executor": "@nx/js:node",
      "options": {
        "buildTarget": "services-user-profile:build"
      }
    },
    "lint": {
      "executor": "@nx/eslint:lint"
    },
    "test": {
      "executor": "@nx/jest:jest",
      "options": {
        "jestConfig": "apps/services/user-profile/jest.config.ts",
        "runInBand": true
      },
      "outputs": ["{workspaceRoot}/coverage/apps/services/user-profile"]
    },
    "dev-services": {
      "executor": "nx:run-commands",
      "options": {
        "command": "docker compose up -d",
        "cwd": "apps/services/user-profile"
      }
    },
    "codegen/backend-schema": {
      "executor": "nx:run-commands",
      "options": {
        "command": "cross-env INIT_SCHEMA=true yarn ts-node -P apps/services/user-profile/tsconfig.app.json apps/services/user-profile/src/buildOpenApi.ts"
      },
      "outputs": ["{projectRoot}/src/openapi.yaml"]
    },
    "migrate": {
      "executor": "nx:run-commands",
      "options": {
        "command": "../../../node_modules/.bin/sequelize-cli db:migrate",
        "cwd": "apps/services/user-profile/"
      }
    },
    "migrate/generate": {
      "executor": "nx:run-commands",
      "options": {
        "command": "../../../node_modules/.bin/sequelize-cli migration:generate",
        "cwd": "apps/services/user-profile/"
      }
    },
    "seed": {
      "executor": "nx:run-commands",
      "options": {
        "commands": ["sequelize-cli db:seed:all --seeders-path ./seeders"],
        "cwd": "apps/services/user-profile/"
      }
    },
    "dev-init": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "yarn nx run services-user-profile:dev-services",
          "yarn nx run services-user-profile:migrate",
          "yarn nx run services-user-profile:seed"
        ],
        "parallel": false
      }
    },
    "dev": {
      "executor": "nx:run-commands",
      "options": {
        "commands": [
          "yarn start services-user-profile",
          "scripts/run-xroad-proxy.sh"
        ],
        "parallel": true
      }
    },
    "docker-express": {
      "executor": "Intentionally left blank, only so this target is valid when using `nx show projects --with-target docker-express`"
    },
    "service-service-portal-api": {}
  }
}
