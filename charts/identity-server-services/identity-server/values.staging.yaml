#####################################################################
#
# Do not edit this file manually, it is automatically generated.
# Run "yarn charts" instead.
#
#####################################################################

global:
  env:
    AUDIT_GROUP_NAME: '/identity-server/audit-log'
    AWS_REGION: 'eu-west-1'
    NPM_CONFIG_UPDATE_NOTIFIER: 'false'
    PORT: '3333'
    name: 'staging'
  initContainer:
    env:
      AWS_REGION: 'eu-west-1'
      NPM_CONFIG_UPDATE_NOTIFIER: 'false'
name: 'identity-server'
annotations:
  ad.datadoghq.com/identity-server.check_names: '["openmetrics"]'
  ad.datadoghq.com/identity-server.init_configs: '[{}]'
  ad.datadoghq.com/identity-server.instances: '[{"prometheus_url": "http://%%host%%:5003/metrics","namespace": "identity-server","metrics":["*"]}]'
  ad.datadoghq.com/identity-server.logs: '[{"service": "identity-server", "source": "csharp"}]'
enabled: true
env:
  ASPNETCORE_URLS: 'http://*:5000'
  AWS__CloudWatch__AuditLogGroup: '/identity-server/audit-log'
  AWS__SystemsManager__ParameterStore__DataProtectionPrefix: '/k8s/identity-server/DataProtectionSecret'
  Application__AllowedRedirectUris: 'https://beta.staging01.devland.is/minarsidur,https://beta.staging01.devland.is/umsoknir'
  Application__MinCompletionPortThreads: '10'
  AudkenniSettings__Retries: '24'
  CORECLR_ENABLE_PROFILING: '1'
  CORECLR_PROFILER: '{846F5F1C-F9AE-4B07-969E-05C26BC060D8}'
  CORECLR_PROFILER_PATH: '/opt/datadog/Datadog.Trace.ClrProfiler.Native.so'
  CacheSettings__Enabled: 'true'
  ContentfulSettings__BaseAddress: 'https://cdn.contentful.com'
  DD_DOTNET_TRACER_HOME: '/opt/datadog'
  DD_INTEGRATIONS: '/opt/datadog/integrations.json'
  DD_TRACE_DEBUG: 'true'
  Datadog__Metrics__Port: '5003'
  IdentityServer__ConsentsScope: '@island.is/auth/consents'
  IdentityServer__EnableFakeLogin: 'true'
  IdentityServer__EnableFeatureDeploymentWildcards: 'true'
  IdentityServer__KeyManagement__Enabled: 'true'
  IdentityServer__SigningCertificate__Path: '/etc/config/ids-signing.pfx'
  LOG_LEVEL: 'info'
  MeUserProfileApiSettings__BaseAddress: 'http://web-service-portal-api.service-portal.svc.cluster.local'
  NODE_OPTIONS: '--max-old-space-size=1843 -r dd-trace/init'
  PersistenceSettings__BaseAddress: 'http://web-services-auth-ids-api'
  PersistenceSettings__DelegationsCacheEnabled: 'false'
  RedisSettings__Address: 'clustercfg.general-redis-cluster-group.ab9ckb.euw1.cache.amazonaws.com'
  RedisSettings__Port: '6379'
  SERVERSIDE_FEATURES_ON: ''
  SessionsApiSettings__BaseAddress: 'http://web-services-sessions.services-sessions.svc.cluster.local'
files:
  - 'ids-signing.pfx'
grantNamespaces:
  - 'nginx-ingress-external'
  - 'user-notification'
  - 'portals-admin'
  - 'datadog'
grantNamespacesEnabled: true
healthCheck:
  liveness:
    initialDelaySeconds: 3
    path: '/liveness'
    timeoutSeconds: 3
  port: 5010
  readiness:
    initialDelaySeconds: 3
    path: '/readiness'
    timeoutSeconds: 3
hpa:
  scaling:
    metric:
      cpuAverageUtilization: 90
      nginxRequestsIrate: 5
    replicas:
      max: 3
      min: 1
image:
  repository: '821090935708.dkr.ecr.eu-west-1.amazonaws.com/identity-server'
ingress:
  primary-alb:
    annotations:
      kubernetes.io/ingress.class: 'nginx-external-alb'
      nginx.ingress.kubernetes.io/enable-global-auth: 'false'
      nginx.ingress.kubernetes.io/proxy-buffer-size: '8k'
      nginx.ingress.kubernetes.io/proxy-buffering: 'on'
      nginx.ingress.kubernetes.io/service-upstream: 'true'
    hosts:
      - host: 'identity-server.staging01.devland.is'
        paths:
          - '/'
namespace: 'identity-server'
podDisruptionBudget:
  maxUnavailable: 1
podSecurityContext:
  fsGroup: 65534
pvcs:
  - accessModes: 'ReadWriteMany'
    mountPath: '/keys'
    name: 'identity-server'
    size: '1Gi'
    storageClass: 'efs-csi'
    useExisting: false
replicaCount:
  default: 1
  max: 3
  min: 1
resources:
  limits:
    cpu: '4000m'
    memory: '2048Mi'
  requests:
    cpu: '1000m'
    memory: '1024Mi'
secrets:
  AudkenniSettings__ClientId: '/k8s/identity-server/AudkenniClientId'
  AudkenniSettings__ClientSecret: '/k8s/identity-server/AudkenniClientSecret'
  CONFIGCAT_SDK_KEY: '/k8s/configcat/CONFIGCAT_SDK_KEY'
  ContentfulSettings__AccessToken: '/k8s/identity-server/CONTENTFUL_ACCESS_TOKEN'
  Datadog__RUM__ApplicationId: '/k8s/ids/DD_RUM_APPLICATION_ID'
  Datadog__RUM__ClientToken: '/k8s/ids/DD_RUM_CLIENT_TOKEN'
  FeatureFlags__ConfigCatSdkKey: '/k8s/configcat/CONFIGCAT_SDK_KEY'
  IdentityServer__FakePersons: '/k8s/identity-server/FakePersons'
  IdentityServer__LicenseKey: '/k8s/identity-server/LicenseKey'
  IdentityServer__SigningCertificate__Passphrase: '/k8s/identity-server/SigningCertificatePassphrase'
  PersistenceSettings__AccessTokenManagementSettings__ClientSecret: '/k8s/identity-server/ClientSecret'
  Redaction__UserIdentifiers__Key: '/k8s/identity-server/redaction/USER_IDENTIFIERS_KEY'
  Redaction__UserIdentifiers__KeyId: '/k8s/identity-server/redaction/USER_IDENTIFIERS_KEY_ID'
  Scopes__Admin__RootAccessList: '/k8s/identity-server/AdminRootAccessList'
securityContext:
  allowPrivilegeEscalation: false
  privileged: false
service:
  targetPort: 5000
serviceAccount:
  annotations:
    eks.amazonaws.com/role-arn: 'arn:aws:iam::261174024191:role/identity-server'
  create: true
  name: 'identity-server'
