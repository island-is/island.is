{
  "openapi": "3.0.0",
  "paths": {
    "/api/v1/applications/{id}/price": {
      "get": {
        "operationId": "getPrice",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/CasePriceResponse" }
              }
            }
          }
        }
      }
    },
    "/api/v1/applications/{id}": {
      "get": {
        "operationId": "getApplication",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetApplicationResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/applications/{id}/post": {
      "post": {
        "operationId": "postApplication",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "201": { "description": "" } }
      }
    },
    "/api/v1/applications/{id}/comments": {
      "get": {
        "operationId": "getComments",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetComments" }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "postComment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostApplicationComment"
              }
            }
          }
        },
        "responses": { "201": { "description": "" } }
      }
    },
    "/api/v1/applications/{id}/upload": {
      "post": {
        "operationId": "uploadApplicationAttachment",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Handles uploading attachments for an application.",
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "files": {
                    "description": "The attachments",
                    "type": "array",
                    "items": { "type": "string", "format": "binary" }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The attachments were uploaded successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/S3UploadFilesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/applications/{id}/presigned-url/{type}": {
      "post": {
        "operationId": "getPresignedUrl",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "type",
            "required": true,
            "in": "path",
            "schema": { "enum": ["frumrit", "fylgiskjol"], "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/GetPresignedUrlBody" }
            }
          }
        },
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PresignedUrlResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/applications/{id}/attachments/{type}": {
      "post": {
        "operationId": "addApplicationAttachment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "type",
            "required": true,
            "in": "path",
            "schema": { "enum": ["frumrit", "fylgiskjol"], "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostApplicationAttachmentBody"
              }
            }
          }
        },
        "responses": { "201": { "description": "" } }
      },
      "get": {
        "operationId": "getApplicationAttachments",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "type",
            "required": true,
            "in": "path",
            "schema": { "enum": ["frumrit", "fylgiskjol"], "type": "string" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetApplicationAttachmentsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/applications/{id}/attachments": {
      "delete": {
        "operationId": "deleteApplicationAttachment",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "key",
            "required": true,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": { "204": { "description": "" } }
      }
    },
    "/api/v1/applications/{id}/involved-parties": {
      "get": {
        "operationId": "getInvolvedParties",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApplicationUserInvolvedPartiesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/applications/{id}/case": {
      "get": {
        "operationId": "getApplicationCase",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetApplicationCaseResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/applications/advert/templates": {
      "get": {
        "operationId": "getApplicationAdvertTemplates",
        "parameters": [],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdvertTemplateDetails"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/applications/advert/templates/{advertType}": {
      "get": {
        "operationId": "getApplicationAdvertTemplate",
        "parameters": [
          {
            "name": "advertType",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAdvertTemplateResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/applications/involved-party/{involvedPartyId}": {
      "get": {
        "operationId": "getSignaturesForInvolvedParty",
        "parameters": [
          {
            "name": "involvedPartyId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful signature get.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetSignature" }
              }
            }
          },
          "404": { "description": "Signature not found" },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetSignature" }
              }
            }
          }
        }
      }
    },
    "/api/v1/advert-types/types": {
      "get": {
        "operationId": "getTypes",
        "summary": "",
        "parameters": [
          {
            "required": false,
            "description": "Search by id",
            "name": "id",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "required": false,
            "description": "Filter by unassigned",
            "name": "unassigned",
            "in": "query",
            "schema": { "type": "boolean" }
          },
          {
            "required": false,
            "description": "Search by main type id",
            "name": "mainType",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "required": false,
            "description": "Search by title",
            "name": "search",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "required": false,
            "description": "Search by slug",
            "name": "slug",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "required": false,
            "description": "Search by department slug, title or id",
            "name": "department",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "required": false,
            "description": "The page number",
            "name": "page",
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "required": false,
            "description": "The page size",
            "name": "pageSize",
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdvertTypes" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/advert-types/main-types": {
      "get": {
        "operationId": "getMainTypes",
        "summary": "",
        "parameters": [
          {
            "required": false,
            "description": "Search by id",
            "name": "id",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "required": false,
            "description": "Filter by unassigned",
            "name": "unassigned",
            "in": "query",
            "schema": { "type": "boolean" }
          },
          {
            "required": false,
            "description": "Search by main type id",
            "name": "mainType",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "required": false,
            "description": "Search by title",
            "name": "search",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "required": false,
            "description": "Search by slug",
            "name": "slug",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "required": false,
            "description": "Search by department slug, title or id",
            "name": "department",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "required": false,
            "description": "The page number",
            "name": "page",
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "required": false,
            "description": "The page size",
            "name": "pageSize",
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdvertMainTypes" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/advert-types/types/{id}": {
      "get": {
        "operationId": "getTypeById",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdvertType" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/advert-types/main-types/{id}": {
      "get": {
        "operationId": "getMainTypeById",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdvertMainType" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/pdf/case/{id}": {
      "get": {
        "operationId": "getPdfByCaseId",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetPdfRespone" }
              }
            }
          }
        }
      }
    },
    "/api/v1/pdf/application/{id}": {
      "get": {
        "operationId": "getPdfByApplicationId",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetPdfRespone" }
              }
            }
          }
        }
      }
    },
    "/api/v1/pdf/case/{id}/url": {
      "get": {
        "operationId": "getPdfUrlByCaseId",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetPdfUrlResponse" }
              }
            }
          }
        }
      }
    },
    "/api/v1/pdf/application/{id}/url": {
      "get": {
        "operationId": "getPdfUrlByApplicationId",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetPdfUrlResponse" }
              }
            }
          }
        }
      }
    },
    "/api/v1/health": {
      "get": {
        "operationId": "HealthController_",
        "parameters": [],
        "responses": { "200": { "description": "Health check endpoint." } }
      }
    }
  },
  "info": {
    "title": "The Official Journal of Iceland Application API",
    "description": "This api is responsible for communications with the island.is application system.",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "CasePriceResponse": {
        "type": "object",
        "properties": {
          "price": { "type": "number", "description": "The price of the case" }
        },
        "required": ["price"]
      },
      "BaseEntity": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "description": "Id of the entity" },
          "title": { "type": "string", "description": "Title of the entity" },
          "slug": { "type": "string", "description": "Slug of the entity" }
        },
        "required": ["id", "title", "slug"]
      },
      "ApplicationCommunicationChannel": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "test@test.is",
            "description": "Email of the communication channel"
          },
          "phone": {
            "type": "string",
            "example": "555 5555",
            "description": "Phone number of the communication channel"
          }
        },
        "required": ["email", "phone"]
      },
      "ApplicationAddition": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "description": "Id of the addition" },
          "title": { "type": "string", "description": "Title of the addition" },
          "content": {
            "type": "string",
            "description": "Content of the addition (html)"
          },
          "type": {
            "type": "string",
            "enum": ["html", "file"],
            "description": "Type of the addition"
          }
        },
        "required": ["id", "title", "content", "type"]
      },
      "ApplicationAdvert": {
        "type": "object",
        "properties": {
          "involvedPartyId": {
            "type": "string",
            "example": "a12c3d4e-5f67-8h90-1i23-j45k6l7m8n9o0",
            "description": "Id of the involved party"
          },
          "department": {
            "example": "a12c3d4e-5f67-8h90-1i23-j45k6l7m8n9o0",
            "description": "Id of the selected department",
            "allOf": [{ "$ref": "#/components/schemas/BaseEntity" }]
          },
          "type": {
            "example": "a12c3d4e-5f67-8h90-1i23-j45k6l7m8n9o0",
            "description": "Id of the selected type",
            "allOf": [{ "$ref": "#/components/schemas/BaseEntity" }]
          },
          "title": {
            "type": "string",
            "example": "a12c3d4e-5f67-8h90-1i23-j45k6l7m8n9o0",
            "description": "Title of the advert"
          },
          "html": {
            "type": "string",
            "example": "a12c3d4e-5f67-8h90-1i23-j45k6l7m8n9o0",
            "description": "HTML contents of the advert"
          },
          "requestedDate": {
            "type": "string",
            "example": "2021-04-01T00:00:00.000Z",
            "description": "Request advert publcation date"
          },
          "categories": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/BaseEntity" }
          },
          "channels": {
            "description": "Communication channels",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationCommunicationChannel"
            }
          },
          "additions": {
            "description": "Additions to the advert",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ApplicationAddition" }
          },
          "message": {
            "type": "string",
            "example": "Some message to the admins",
            "description": "Message to the admins of the advert"
          }
        },
        "required": [
          "involvedPartyId",
          "department",
          "type",
          "title",
          "html",
          "requestedDate",
          "categories",
          "channels",
          "additions",
          "message"
        ]
      },
      "ApplicationMisc": {
        "type": "object",
        "properties": {
          "signatureType": {
            "type": "string",
            "enum": ["regular", "committee"]
          }
        },
        "required": ["signatureType"]
      },
      "AdditionalSignature": {
        "type": "object",
        "properties": {
          "regular": {
            "type": "string",
            "description": "Message to the regular"
          },
          "committee": {
            "type": "string",
            "description": "Message to the committee"
          }
        },
        "required": ["regular", "committee"]
      },
      "ApplicationSignatureMember": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "description": "Name of the member" },
          "before": {
            "type": "string",
            "description": "Text before the name member"
          },
          "below": {
            "type": "string",
            "description": "Text below the name member"
          },
          "above": {
            "type": "string",
            "description": "Text above the name member"
          },
          "after": {
            "type": "string",
            "description": "Text after the name member"
          }
        },
        "required": ["name", "before", "below", "above", "after"]
      },
      "ApplicationSignature": {
        "type": "object",
        "properties": {
          "institution": {
            "type": "string",
            "description": "Institution of the signature"
          },
          "date": {
            "type": "string",
            "description": "Date when the signature was signed"
          },
          "members": {
            "description": "Members of the signature",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationSignatureMember"
            }
          },
          "html": {
            "type": "string",
            "description": "The html contents of the signature"
          }
        },
        "required": ["institution", "date", "members", "html"]
      },
      "ApplicationCommitteeSignature": {
        "type": "object",
        "properties": {
          "institution": {
            "type": "string",
            "description": "Institution of the signature"
          },
          "date": {
            "type": "string",
            "description": "Date when the signature was signed"
          },
          "members": {
            "description": "Members of the signature",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationSignatureMember"
            }
          },
          "html": {
            "type": "string",
            "description": "The html contents of the signature"
          },
          "chairman": {
            "description": "The title of the committee",
            "allOf": [
              { "$ref": "#/components/schemas/ApplicationSignatureMember" }
            ]
          }
        },
        "required": ["institution", "date", "members", "html", "chairman"]
      },
      "ApplicationSignatures": {
        "type": "object",
        "properties": {
          "additionalSignature": {
            "example": "Some message to the applicant",
            "description": "Message to the applicant",
            "allOf": [{ "$ref": "#/components/schemas/AdditionalSignature" }]
          },
          "regular": {
            "description": "Regular signature",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ApplicationSignature" }
          },
          "committee": {
            "description": "Committee signature",
            "allOf": [
              { "$ref": "#/components/schemas/ApplicationCommitteeSignature" }
            ]
          }
        },
        "required": ["additionalSignature", "regular", "committee"]
      },
      "ApplicationAnswers": {
        "type": "object",
        "properties": {
          "advert": {
            "description": "Answers for the advert application",
            "allOf": [{ "$ref": "#/components/schemas/ApplicationAdvert" }]
          },
          "misc": {
            "description": "Misc answers",
            "allOf": [{ "$ref": "#/components/schemas/ApplicationMisc" }]
          },
          "signatures": {
            "description": "Signature answers",
            "allOf": [{ "$ref": "#/components/schemas/ApplicationSignatures" }]
          }
        },
        "required": ["advert", "misc", "signatures"]
      },
      "Application": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "a12c3d4e-5f67-8h90-1i23-j45k6l7m8n9o0",
            "description": "Guid of the application"
          },
          "applicant": {
            "type": "string",
            "example": "0101015050",
            "description": "National id of the applicant"
          },
          "assignees": {
            "example": ["0101015050"],
            "description": "List of assignees",
            "type": "array",
            "items": { "type": "string" }
          },
          "attachments": { "type": "object", "description": "Attachments" },
          "state": {
            "type": "string",
            "enum": [
              "requirements",
              "draft",
              "draft_retry",
              "submitted",
              "complete"
            ],
            "example": "draft",
            "description": "State of the application"
          },
          "status": {
            "type": "string",
            "example": "inprogress",
            "description": "Status of the application"
          },
          "typeId": {
            "type": "string",
            "example": "OfficialJournalOfIceland",
            "description": "Type of the application"
          },
          "created": {
            "type": "string",
            "example": "2021-04-01T00:00:00.000Z",
            "description": "Application creation date"
          },
          "modified": {
            "type": "string",
            "example": "2021-04-01T00:00:00.000Z",
            "description": "Application last modified date"
          },
          "name": {
            "type": "string",
            "example": "Stjórnartíðindi",
            "description": "Name of the application"
          },
          "applicantActors": {
            "description": "List of applicant actors",
            "type": "array",
            "items": { "type": "string" }
          },
          "answers": {
            "description": "Application answers",
            "allOf": [{ "$ref": "#/components/schemas/ApplicationAnswers" }]
          },
          "listed": {
            "type": "boolean",
            "example": true,
            "description": "Is the application listed"
          },
          "prunedAt": {
            "type": "string",
            "example": "2021-04-01T00:00:00.000Z",
            "description": "Prune date of the application"
          },
          "pruned": {
            "type": "boolean",
            "example": "2021-04-01T00:00:00.000Z",
            "description": "Date of the application"
          }
        },
        "required": [
          "id",
          "applicant",
          "assignees",
          "attachments",
          "state",
          "status",
          "typeId",
          "created",
          "modified",
          "name",
          "applicantActors",
          "answers",
          "listed",
          "prunedAt",
          "pruned"
        ]
      },
      "GetApplicationResponse": {
        "type": "object",
        "properties": {
          "application": { "$ref": "#/components/schemas/Application" }
        },
        "required": ["application"]
      },
      "CaseActionEnum": {
        "type": "string",
        "description": "The action that created the comment",
        "enum": [
          "SUBMIT",
          "ASSIGN_USER",
          "ASSIGN_SELF",
          "UPDATE_STATUS",
          "INTERNAL_COMMENT",
          "EXTERNAL_COMMENT",
          "APPLICATION_COMMENT"
        ]
      },
      "CaseStatusEnum": {
        "type": "string",
        "description": "Status of the case",
        "enum": [
          "Innsent",
          "Grunnvinnsla",
          "Yfirlestur",
          "Tilbúið",
          "Útgefið",
          "Tekið úr birtingu",
          "Birtingu hafnað"
        ]
      },
      "CaseStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "title": {
            "example": "Innsent",
            "$ref": "#/components/schemas/CaseStatusEnum"
          },
          "slug": {
            "type": "string",
            "example": "innsent",
            "description": "Slug of the case staus"
          }
        },
        "required": ["id", "title", "slug"]
      },
      "CommentCreatorDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "description": "Id of the entity" },
          "title": { "type": "string", "description": "Title of the entity" }
        },
        "required": ["id", "title"]
      },
      "CommentReceiverDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "description": "Id of the entity" },
          "title": { "type": "string", "description": "Title of the entity" }
        },
        "required": ["id", "title"]
      },
      "CommentDto": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "description": "The id of the comment" },
          "created": {
            "type": "string",
            "description": "ISO string representation of the date the comment was created"
          },
          "action": { "$ref": "#/components/schemas/CaseActionEnum" },
          "caseStatus": {
            "description": "The status of the case when the comment was created",
            "allOf": [{ "$ref": "#/components/schemas/CaseStatus" }]
          },
          "creator": {
            "description": "The creator of the comment",
            "allOf": [{ "$ref": "#/components/schemas/CommentCreatorDto" }]
          },
          "receiver": {
            "nullable": true,
            "description": "The receiver of the comment",
            "allOf": [{ "$ref": "#/components/schemas/CommentReceiverDto" }]
          },
          "comment": {
            "type": "string",
            "description": "The comment",
            "nullable": true
          }
        },
        "required": [
          "id",
          "created",
          "action",
          "caseStatus",
          "creator",
          "receiver",
          "comment"
        ]
      },
      "GetComments": {
        "type": "object",
        "properties": {
          "comments": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CommentDto" }
          }
        },
        "required": ["comments"]
      },
      "PostApplicationComment": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "The case comment itself"
          }
        },
        "required": ["comment"]
      },
      "S3UploadFileResponse": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "The URL of the uploaded file."
          },
          "filename": {
            "type": "string",
            "description": "Filename of the uploaded file."
          },
          "size": {
            "type": "number",
            "description": "The size of the uploaded file."
          }
        },
        "required": ["url", "filename", "size"]
      },
      "S3UploadFilesResponse": {
        "type": "object",
        "properties": {
          "files": {
            "description": "The uploaded files.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/S3UploadFileResponse" }
          }
        },
        "required": ["files"]
      },
      "GetPresignedUrlBody": {
        "type": "object",
        "properties": {
          "fileName": { "type": "string" },
          "fileType": { "type": "string" }
        },
        "required": ["fileName", "fileType"]
      },
      "PresignedUrlResponse": {
        "type": "object",
        "properties": { "url": { "type": "string" } },
        "required": ["url"]
      },
      "PostApplicationAttachmentBody": {
        "type": "object",
        "properties": {
          "fileName": { "type": "string" },
          "originalFileName": { "type": "string" },
          "fileFormat": { "type": "string" },
          "fileExtension": { "type": "string" },
          "fileLocation": { "type": "string" },
          "fileSize": { "type": "number" }
        },
        "required": [
          "fileName",
          "originalFileName",
          "fileFormat",
          "fileExtension",
          "fileLocation",
          "fileSize"
        ]
      },
      "ApplicationAttachmentType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Id of the attachment type"
          },
          "title": {
            "type": "string",
            "enum": ["Frumrit", "Fylgiskjöl"],
            "description": "Title of the attachment type"
          },
          "slug": {
            "type": "string",
            "description": "Slug of the attachment type"
          }
        },
        "required": ["id", "title", "slug"]
      },
      "ApplicationAttachment": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "description": "Id of the attachment" },
          "applicationId": {
            "type": "string",
            "description": "Id of the application"
          },
          "originalFileName": {
            "type": "string",
            "description": "Original file name"
          },
          "fileName": { "type": "string", "description": "File name" },
          "fileFormat": { "type": "string", "description": "File format" },
          "fileExtension": {
            "type": "string",
            "description": "File extension"
          },
          "fileSize": { "type": "number", "description": "File size" },
          "fileLocation": { "type": "string", "description": "File location" },
          "type": {
            "description": "Attachment type",
            "allOf": [
              { "$ref": "#/components/schemas/ApplicationAttachmentType" }
            ]
          },
          "deleted": { "type": "boolean", "description": "Deleted" }
        },
        "required": [
          "id",
          "applicationId",
          "originalFileName",
          "fileName",
          "fileFormat",
          "fileExtension",
          "fileSize",
          "fileLocation",
          "type",
          "deleted"
        ]
      },
      "GetApplicationAttachmentsResponse": {
        "type": "object",
        "properties": {
          "attachments": {
            "description": "Array of attachments tied to the application",
            "type": "array",
            "items": { "$ref": "#/components/schemas/ApplicationAttachment" }
          }
        },
        "required": ["attachments"]
      },
      "Institution": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the institution, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "title": {
            "type": "string",
            "description": "Title of the institution",
            "example": "Dómsmálaráðuneytið"
          },
          "slug": {
            "type": "string",
            "description": "Slug of the institution, used in URLs and API requests.",
            "example": "domsmalaraduneytid"
          }
        },
        "required": ["id", "title", "slug"]
      },
      "ApplicationUserInvolvedPartiesResponse": {
        "type": "object",
        "properties": {
          "involvedParties": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Institution" }
          }
        },
        "required": ["involvedParties"]
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the advert category, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "title": {
            "type": "string",
            "description": "Title of the advert category.",
            "example": "Evrópska efnahagssvæðið"
          },
          "slug": {
            "type": "string",
            "description": "Slug of the advert category, used in URLs and API requests.",
            "example": "evropska-efnahagssvaedid"
          }
        },
        "required": ["id", "title", "slug"]
      },
      "CommunicationStatus": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the communication status"
          },
          "title": {
            "type": "string",
            "enum": [
              "Ekki hafin",
              "Beðið eftir svörum",
              "Svör hafa borist",
              "Lokið"
            ],
            "description": "The title of the communication status"
          },
          "slug": {
            "type": "string",
            "description": "The slug of the communication status"
          }
        },
        "required": ["id", "title", "slug"]
      },
      "Department": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the advert department, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "title": {
            "type": "string",
            "description": "Title of the advert department.",
            "example": "A deild"
          },
          "slug": {
            "type": "string",
            "description": "Slug of the advert department, used in URLs and API requests.",
            "example": "a-deild"
          }
        },
        "required": ["id", "title", "slug"]
      },
      "AdvertType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the main advert type"
          },
          "title": {
            "type": "string",
            "description": "The title of the main advert type"
          },
          "slug": {
            "type": "string",
            "description": "The slug of the main advert type"
          },
          "department": {
            "description": "The department of the main advert type",
            "allOf": [{ "$ref": "#/components/schemas/Department" }]
          }
        },
        "required": ["id", "title", "slug", "department"]
      },
      "ApplicationCase": {
        "type": "object",
        "properties": {
          "categories": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Category" }
          },
          "status": {
            "description": "Current status of the case",
            "allOf": [{ "$ref": "#/components/schemas/CaseStatus" }]
          },
          "communicationStatus": {
            "$ref": "#/components/schemas/CommunicationStatus"
          },
          "department": { "$ref": "#/components/schemas/Department" },
          "type": { "$ref": "#/components/schemas/AdvertType" },
          "html": { "type": "string" }
        },
        "required": [
          "categories",
          "status",
          "communicationStatus",
          "department",
          "type",
          "html"
        ]
      },
      "GetApplicationCaseResponse": {
        "type": "object",
        "properties": {
          "applicationCase": { "$ref": "#/components/schemas/ApplicationCase" }
        },
        "required": ["applicationCase"]
      },
      "AdvertTemplateDetails": {
        "type": "object",
        "properties": {
          "slug": {
            "type": "string",
            "example": "auglysing",
            "enum": ["auglysing", "reglugerd", "gjaldskra"]
          },
          "title": {
            "type": "string",
            "description": "Template title",
            "example": "Auglýsing"
          }
        },
        "required": ["slug", "title"]
      },
      "GetAdvertTemplateResponse": {
        "type": "object",
        "properties": {
          "html": {
            "type": "string",
            "description": "Advert template as HTML"
          },
          "type": {
            "type": "string",
            "description": "Template type",
            "example": "auglysing",
            "enum": ["auglysing", "reglugerd", "gjaldskra"]
          }
        },
        "required": ["html", "type"]
      },
      "SignatureMember": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the signature member"
          },
          "name": {
            "type": "string",
            "description": "The name/title/w.e. of the signature member"
          },
          "textAbove": {
            "type": "string",
            "nullable": true,
            "description": "The text comes above the signature name"
          },
          "textBefore": {
            "type": "string",
            "nullable": true,
            "description": "The text that comes before the signature name"
          },
          "textBelow": {
            "type": "string",
            "nullable": true,
            "description": "The text that comes below the signature name"
          },
          "textAfter": {
            "type": "string",
            "nullable": true,
            "description": "The text that comes after the signature name"
          }
        },
        "required": [
          "id",
          "name",
          "textAbove",
          "textBefore",
          "textBelow",
          "textAfter"
        ]
      },
      "SignatureRecord": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "institution": { "type": "string" },
          "signatureDate": { "type": "string" },
          "additional": { "type": "string", "nullable": true },
          "chairman": {
            "nullable": true,
            "allOf": [{ "$ref": "#/components/schemas/SignatureMember" }]
          },
          "members": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/SignatureMember" }
          }
        },
        "required": [
          "id",
          "institution",
          "signatureDate",
          "additional",
          "chairman",
          "members"
        ]
      },
      "Signature": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "description": "The id of the signature" },
          "signatureDate": {
            "type": "string",
            "description": "ISO datestring of the signature"
          },
          "involvedParty": {
            "description": "The involved party of the signature",
            "allOf": [{ "$ref": "#/components/schemas/Institution" }]
          },
          "html": { "type": "string", "description": "HTML of the signature" },
          "created": {
            "type": "string",
            "description": "ISO datestring of the creation date"
          },
          "records": {
            "description": "The signature record",
            "type": "array",
            "items": { "$ref": "#/components/schemas/SignatureRecord" }
          }
        },
        "required": [
          "id",
          "signatureDate",
          "involvedParty",
          "html",
          "created",
          "records"
        ]
      },
      "GetSignature": {
        "type": "object",
        "properties": {
          "signature": { "$ref": "#/components/schemas/Signature" }
        },
        "required": ["signature"]
      },
      "Paging": {
        "type": "object",
        "properties": {
          "page": { "type": "number", "example": 1 },
          "totalPages": { "type": "number", "example": 10 },
          "totalItems": { "type": "number", "example": 1000 },
          "nextPage": { "type": "number", "example": 2, "nullable": true },
          "previousPage": { "type": "number", "example": 1, "nullable": true },
          "pageSize": {
            "type": "number",
            "example": 10,
            "minimum": 1,
            "maximum": 100
          },
          "hasNextPage": { "type": "boolean", "example": true },
          "hasPreviousPage": { "type": "boolean", "example": false }
        },
        "required": [
          "page",
          "totalPages",
          "totalItems",
          "nextPage",
          "previousPage",
          "pageSize",
          "hasNextPage",
          "hasPreviousPage"
        ]
      },
      "GetAdvertTypes": {
        "type": "object",
        "properties": {
          "types": {
            "description": "List of advert types",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdvertType" }
          },
          "paging": {
            "description": "Paging information",
            "allOf": [{ "$ref": "#/components/schemas/Paging" }]
          }
        },
        "required": ["types", "paging"]
      },
      "AdvertTypeError": {
        "type": "object",
        "properties": {
          "errorType": {
            "type": "string",
            "enum": ["DuplicateError", "ValidationError", "NotFoundError"]
          },
          "name": { "type": "string" },
          "message": { "type": "string" },
          "severity": { "type": "string", "enum": ["info", "warning", "error"] }
        },
        "required": ["errorType", "name", "message", "severity"]
      },
      "AdvertMainType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the main advert type"
          },
          "title": {
            "type": "string",
            "description": "The title of the main advert type"
          },
          "slug": {
            "type": "string",
            "description": "The slug of the main advert type"
          },
          "department": {
            "description": "The department this main type belongs to",
            "allOf": [{ "$ref": "#/components/schemas/Department" }]
          },
          "types": {
            "description": "All types under this main type",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdvertType" }
          }
        },
        "required": ["id", "title", "slug", "department", "types"]
      },
      "GetAdvertMainTypes": {
        "type": "object",
        "properties": {
          "mainTypes": {
            "description": "List of all main advert types",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdvertMainType" }
          },
          "paging": {
            "description": "Paging information",
            "allOf": [{ "$ref": "#/components/schemas/Paging" }]
          }
        },
        "required": ["mainTypes", "paging"]
      },
      "GetAdvertType": {
        "type": "object",
        "properties": {
          "type": {
            "description": "The advert type",
            "allOf": [{ "$ref": "#/components/schemas/AdvertType" }]
          }
        },
        "required": ["type"]
      },
      "GetAdvertMainType": {
        "type": "object",
        "properties": {
          "mainType": {
            "description": "The main advert type",
            "allOf": [{ "$ref": "#/components/schemas/AdvertMainType" }]
          }
        },
        "required": ["mainType"]
      },
      "GetPdfRespone": {
        "type": "object",
        "properties": {
          "content": { "type": "string", "description": "Base64 encoded PDF" }
        },
        "required": ["content"]
      },
      "GetPdfUrlResponse": {
        "type": "object",
        "properties": { "url": { "type": "string" } },
        "required": ["url"]
      }
    }
  }
}
