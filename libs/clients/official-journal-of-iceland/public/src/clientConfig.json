{
  "openapi": "3.0.0",
  "paths": {
    "/api/v1/adverts/{id}": {
      "get": {
        "operationId": "getAdvertById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdvertResponse" }
              }
            }
          }
        }
      }
    },
    "/api/v1/adverts/similar/{id}": {
      "get": {
        "operationId": "getSimilarAdvertsById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSimilarAdvertsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/adverts": {
      "get": {
        "operationId": "getAdverts",
        "parameters": [
          {
            "name": "search",
            "description": "String to search for in adverts.",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "description": "Page number to return.",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "pageSize",
            "description": "Page size to return.",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "department",
            "description": "One or more departments (by `slug`) to filter on.",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "type",
            "description": "One or more types (by `slug`) to filter on.",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "category",
            "description": "One or more categories (by `slug`) to filter on.",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "involvedParty",
            "description": "One or more involved parties (by `slug`) to filter on.",
            "required": false,
            "in": "query",
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "name": "dateFrom",
            "description": "Date from which to filter adverts on, inclusive, takes into account `createdDate`, `updatedDate` and `signatureDate`.",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "dateTo",
            "description": "Date to which to filter adverts on, inclusive, takes into account `createdDate`, `updatedDate` and `signatureDate`.",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdvertsResponse" }
              }
            }
          }
        }
      }
    },
    "/api/v1/departments/{id}": {
      "get": {
        "operationId": "getDepartmentById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDepartmentResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/departments": {
      "get": {
        "operationId": "getDepartments",
        "parameters": [
          {
            "name": "search",
            "description": "String to search for in departments.",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "description": "Page number to return.",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "pageSize",
            "description": "Page size number to return.",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDepartmentsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/maincategories": {
      "get": {
        "operationId": "getMainCategories",
        "parameters": [
          {
            "name": "search",
            "description": "String to search for",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "ids",
            "required": false,
            "in": "query",
            "schema": {
              "default": [],
              "type": "array",
              "items": { "type": "string" }
            }
          },
          {
            "name": "page",
            "description": "Page number to return.",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "pageSize",
            "description": "Page size number to return.",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMainCategoriesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/categories": {
      "get": {
        "operationId": "getCategories",
        "parameters": [
          {
            "name": "search",
            "description": "String to search for",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "ids",
            "required": false,
            "in": "query",
            "schema": {
              "default": [],
              "type": "array",
              "items": { "type": "string" }
            }
          },
          {
            "name": "page",
            "description": "Page number to return.",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "pageSize",
            "description": "Page size number to return.",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCategoriesResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/institutions": {
      "get": {
        "operationId": "getInstitutions",
        "parameters": [
          {
            "name": "search",
            "description": "String to search for",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "ids",
            "required": false,
            "in": "query",
            "schema": {
              "default": [],
              "type": "array",
              "items": { "type": "string" }
            }
          },
          {
            "name": "page",
            "description": "Page number to return.",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "pageSize",
            "description": "Page size number to return.",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetInstitutionsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/signatures": {
      "get": {
        "operationId": "getSignatures",
        "parameters": [
          {
            "description": "Search for a specific signature by id",
            "required": false,
            "name": "id",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "description": "Search for a specific signature by type",
            "example": "Regular",
            "required": false,
            "name": "type",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "description": "Search for a specific signature",
            "example": "Dagur B. Eggertsson",
            "required": false,
            "name": "search",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "page",
            "description": "Page number to return.",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetAdvertSignatureResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cases": {
      "get": {
        "operationId": "getCasesInProgress",
        "parameters": [
          {
            "name": "search",
            "description": "String to search for",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "ids",
            "required": false,
            "in": "query",
            "schema": {
              "default": [],
              "type": "array",
              "items": { "type": "string" }
            }
          },
          {
            "name": "page",
            "description": "Page number to return.",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "name": "pageSize",
            "description": "Page size number to return.",
            "required": false,
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCasesInProgressReponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/error": {
      "get": {
        "operationId": "error",
        "parameters": [],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ValidationResponse" }
              }
            }
          }
        }
      }
    },
    "/api/v1/advert-types/types": {
      "get": {
        "operationId": "getTypes",
        "summary": "",
        "parameters": [
          {
            "required": false,
            "description": "Search by id",
            "name": "id",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "required": false,
            "description": "Filter by unassigned",
            "name": "unassigned",
            "in": "query",
            "schema": { "type": "boolean" }
          },
          {
            "required": false,
            "description": "Search by main type id",
            "name": "mainType",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "required": false,
            "description": "Search by title",
            "name": "search",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "required": false,
            "description": "Search by slug",
            "name": "slug",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "required": false,
            "description": "Search by department slug, title or id",
            "name": "department",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "required": false,
            "description": "The page number",
            "name": "page",
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "required": false,
            "description": "The page size",
            "name": "pageSize",
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdvertTypes" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/advert-types/main-types": {
      "get": {
        "operationId": "getMainTypes",
        "summary": "",
        "parameters": [
          {
            "required": false,
            "description": "Search by id",
            "name": "id",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "required": false,
            "description": "Filter by unassigned",
            "name": "unassigned",
            "in": "query",
            "schema": { "type": "boolean" }
          },
          {
            "required": false,
            "description": "Search by main type id",
            "name": "mainType",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "required": false,
            "description": "Search by title",
            "name": "search",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "required": false,
            "description": "Search by slug",
            "name": "slug",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "required": false,
            "description": "Search by department slug, title or id",
            "name": "department",
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "required": false,
            "description": "The page number",
            "name": "page",
            "in": "query",
            "schema": { "type": "number" }
          },
          {
            "required": false,
            "description": "The page size",
            "name": "pageSize",
            "in": "query",
            "schema": { "type": "number" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdvertMainTypes" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/advert-types/types/{id}": {
      "get": {
        "operationId": "getTypeById",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdvertType" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/advert-types/main-types/{id}": {
      "get": {
        "operationId": "getMainTypeById",
        "summary": "",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetAdvertMainType" }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AdvertTypeError" }
              }
            }
          }
        }
      }
    },
    "/api/v1/pdf/case/{id}": {
      "get": {
        "operationId": "getPdfByCaseId",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetPdfRespone" }
              }
            }
          }
        }
      }
    },
    "/api/v1/pdf/application/{id}": {
      "get": {
        "operationId": "getPdfByApplicationId",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetPdfRespone" }
              }
            }
          }
        }
      }
    },
    "/api/v1/pdf/case/{id}/url": {
      "get": {
        "operationId": "getPdfUrlByCaseId",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetPdfUrlResponse" }
              }
            }
          }
        }
      }
    },
    "/api/v1/pdf/application/{id}/url": {
      "get": {
        "operationId": "getPdfUrlByApplicationId",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/GetPdfUrlResponse" }
              }
            }
          }
        }
      }
    },
    "/api/v1/health": {
      "get": {
        "operationId": "HealthController_",
        "parameters": [],
        "responses": { "200": { "description": "Health check endpoint." } }
      }
    }
  },
  "info": {
    "title": "The Official Journal of Iceland API",
    "description": "API for advarts and publication in the Official Journal of Iceland.",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "Department": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the advert department, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "title": {
            "type": "string",
            "description": "Title of the advert department.",
            "example": "A deild"
          },
          "slug": {
            "type": "string",
            "description": "Slug of the advert department, used in URLs and API requests.",
            "example": "a-deild"
          }
        },
        "required": ["id", "title", "slug"]
      },
      "AdvertType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the main advert type"
          },
          "title": {
            "type": "string",
            "description": "The title of the main advert type"
          },
          "slug": {
            "type": "string",
            "description": "The slug of the main advert type"
          },
          "department": {
            "description": "The department of the main advert type",
            "allOf": [{ "$ref": "#/components/schemas/Department" }]
          }
        },
        "required": ["id", "title", "slug", "department"]
      },
      "AdvertPublicationNumber": {
        "type": "object",
        "properties": {
          "number": {
            "type": "number",
            "description": "Serial number of the publication number.",
            "example": "1"
          },
          "year": {
            "type": "number",
            "description": "Year of the publication number.",
            "example": "2024"
          },
          "full": {
            "type": "string",
            "description": "Full publication number, with both `number` and `year` separated with `/`.",
            "example": "1/2024"
          }
        },
        "required": ["number", "year", "full"]
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the advert category, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "title": {
            "type": "string",
            "description": "Title of the advert category.",
            "example": "Evrópska efnahagssvæðið"
          },
          "slug": {
            "type": "string",
            "description": "Slug of the advert category, used in URLs and API requests.",
            "example": "evropska-efnahagssvaedid"
          }
        },
        "required": ["id", "title", "slug"]
      },
      "Institution": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the institution, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "title": {
            "type": "string",
            "description": "Title of the institution",
            "example": "Dómsmálaráðuneytið"
          },
          "slug": {
            "type": "string",
            "description": "Slug of the institution, used in URLs and API requests.",
            "example": "domsmalaraduneytid"
          }
        },
        "required": ["id", "title", "slug"]
      },
      "AdvertDocument": {
        "type": "object",
        "properties": {
          "isLegacy": {
            "type": "boolean",
            "description": "Is the `html` from the legacy system?",
            "example": "false"
          },
          "html": {
            "type": "string",
            "description": "Full HTML for the advert, either generated by new system or legacy system based on `isLegacy`.",
            "example": "<html string>",
            "nullable": true
          },
          "pdfUrl": {
            "type": "string",
            "description": "URL for the generated PDF file.",
            "example": "<url>",
            "nullable": true
          }
        },
        "required": ["isLegacy", "html"]
      },
      "AdvertSignatureMember": {
        "type": "object",
        "properties": {
          "isChairman": {
            "type": "boolean",
            "description": "Marks the members as chairman or not",
            "example": true,
            "nullable": false
          },
          "name": {
            "type": "string",
            "description": "Name of the committee chairman",
            "example": "Dagur B. Eggertsson"
          },
          "textAbove": {
            "type": "string",
            "description": "Text above the name of the signature",
            "example": "F.h.r",
            "nullable": true
          },
          "textAfter": {
            "type": "string",
            "description": "Text after the name of the signature",
            "example": "formaður",
            "nullable": true
          },
          "textBelow": {
            "type": "string",
            "description": "Text above the name of the signature",
            "example": "borgarstjóri",
            "nullable": true
          }
        },
        "required": ["isChairman", "name"]
      },
      "AdvertSignatureData": {
        "type": "object",
        "properties": {
          "institution": {
            "type": "string",
            "description": "Institution of the signature",
            "example": "Reykjavíkurborg"
          },
          "date": {
            "type": "string",
            "description": "Date of the signature",
            "example": "2006-10-17 00:00:00.0000",
            "nullable": false
          },
          "members": {
            "description": "Members of the signature",
            "example": true,
            "nullable": false,
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdvertSignatureMember" }
          }
        },
        "required": ["institution", "date", "members"]
      },
      "AdvertSignature": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the signature, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "advertId": {
            "type": "string",
            "description": "Advert ID",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "type": {
            "type": "string",
            "description": "Type of the signature",
            "enum": ["Hefðbundin", "Nefnd"],
            "example": "Hefðbundin"
          },
          "additional": {
            "type": "string",
            "description": "Optional addiational signature",
            "example": "Guðrún Jónsdóttir"
          },
          "data": {
            "description": "Signature data",
            "example": true,
            "nullable": false,
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdvertSignatureData" }
          }
        },
        "required": ["id", "advertId", "type", "data"]
      },
      "AdvertAttachment": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "File name for Attachment.",
            "example": "Viðauki.pdf"
          },
          "type": {
            "type": "string",
            "description": "Type Attachment.",
            "example": "addendum"
          },
          "url": {
            "type": "string",
            "description": "URL for Attachment.",
            "example": "<url>"
          }
        },
        "required": ["name", "type", "url"]
      },
      "AdvertCorrection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "title": {
            "type": "string",
            "description": "Title of the correction"
          },
          "description": {
            "type": "string",
            "description": "The correction description"
          },
          "advertId": {
            "type": "string",
            "description": "Id of the advert being corrected"
          },
          "documentHtml": { "type": "string" },
          "documentPdfUrl": { "type": "string" },
          "createdDate": {
            "type": "string",
            "nullable": false,
            "example": "2024-01-01T09:00:00Z"
          },
          "updatedDate": {
            "type": "string",
            "nullable": false,
            "example": "2024-01-20T09:00:00Z"
          }
        },
        "required": [
          "id",
          "title",
          "description",
          "advertId",
          "createdDate",
          "updatedDate"
        ]
      },
      "Advert": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the advert, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "department": {
            "description": "The department the advert is for.",
            "nullable": false,
            "example": "A deild",
            "allOf": [{ "$ref": "#/components/schemas/Department" }]
          },
          "type": {
            "description": "Type of the advert.",
            "example": "GJALDSKRÁ",
            "allOf": [{ "$ref": "#/components/schemas/AdvertType" }]
          },
          "subject": {
            "type": "string",
            "description": "Subject of the advert, always dependant on the `type`.",
            "example": "fyrir hundahald í Reykjavíkurborg."
          },
          "title": {
            "type": "string",
            "description": "Title of the advert with both `type` and `subject`.",
            "example": "GJALDSKRÁ fyrir hundahald í Reykjavíkurborg."
          },
          "status": {
            "type": "string",
            "enum": [
              "Virk",
              "Afturkölluð",
              "Drög",
              "Eldri auglýsing",
              "Hafnað",
              "Í bið",
              "Í vinnslu",
              "Innsend",
              "Tilbúin til útgáfu",
              "Útgefin"
            ],
            "description": "Status of the advert",
            "nullable": false,
            "example": "Virk"
          },
          "publicationNumber": {
            "description": "Publication number of the advert",
            "nullable": true,
            "allOf": [
              { "$ref": "#/components/schemas/AdvertPublicationNumber" }
            ]
          },
          "createdDate": {
            "type": "string",
            "description": "Date the advert was created. ISO 8601 date and time format in UTC.",
            "nullable": false,
            "example": "2024-01-01T09:00:00Z"
          },
          "updatedDate": {
            "type": "string",
            "description": "Date the advert was last updated. ISO 8601 date and time format in UTC.",
            "nullable": false,
            "example": "2024-01-20T09:00:00Z"
          },
          "signatureDate": {
            "type": "string",
            "description": "Date the advert was signed, can be null. ISO 8601 date and time format in UTC.",
            "nullable": true,
            "example": "2024-01-10T16:00:00Z"
          },
          "publicationDate": {
            "type": "string",
            "description": "Date the advert was signed, can be null. ISO 8601 date and time format in UTC.",
            "nullable": true,
            "example": "2024-01-20T09:00:00Z"
          },
          "categories": {
            "description": "List of advert categories.",
            "nullable": false,
            "type": "array",
            "items": { "$ref": "#/components/schemas/Category" }
          },
          "involvedParty": {
            "description": "Involved party for the advert.",
            "nullable": false,
            "allOf": [{ "$ref": "#/components/schemas/Institution" }]
          },
          "document": {
            "description": "Advert document in different formats.",
            "nullable": false,
            "allOf": [{ "$ref": "#/components/schemas/AdvertDocument" }]
          },
          "signature": {
            "description": "Signatures for the advert.",
            "allOf": [{ "$ref": "#/components/schemas/AdvertSignature" }]
          },
          "attachments": {
            "description": "Attachments for the advert.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdvertAttachment" }
          },
          "corrections": {
            "description": "Corrections made to the advert.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdvertCorrection" }
          }
        },
        "required": [
          "id",
          "department",
          "type",
          "title",
          "status",
          "publicationNumber",
          "createdDate",
          "updatedDate",
          "signatureDate",
          "publicationDate",
          "categories",
          "involvedParty",
          "document",
          "signature",
          "attachments"
        ]
      },
      "GetAdvertResponse": {
        "type": "object",
        "properties": {
          "advert": {
            "description": "Advert",
            "allOf": [{ "$ref": "#/components/schemas/Advert" }]
          }
        },
        "required": ["advert"]
      },
      "AdvertSimilar": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the advert, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "department": {
            "description": "The department the advert is for.",
            "nullable": false,
            "example": "A deild",
            "allOf": [{ "$ref": "#/components/schemas/Department" }]
          },
          "subject": {
            "type": "string",
            "description": "Subject of the advert, always dependant on the `type`.",
            "example": "fyrir hundahald í Reykjavíkurborg."
          },
          "title": {
            "type": "string",
            "description": "Title of the advert with both `type` and `subject`.",
            "example": "GJALDSKRÁ fyrir hundahald í Reykjavíkurborg."
          },
          "publicationNumber": {
            "description": "Publication number of the advert",
            "nullable": true,
            "allOf": [
              { "$ref": "#/components/schemas/AdvertPublicationNumber" }
            ]
          },
          "publicationDate": {
            "type": "string",
            "description": "Date the advert was signed, can be null. ISO 8601 date and time format in UTC.",
            "nullable": true,
            "example": "2024-01-20T09:00:00Z"
          },
          "categories": {
            "description": "List of advert categories.",
            "nullable": false,
            "type": "array",
            "items": { "$ref": "#/components/schemas/Category" }
          },
          "involvedParty": {
            "description": "Involved party for the advert.",
            "nullable": false,
            "allOf": [{ "$ref": "#/components/schemas/Institution" }]
          }
        },
        "required": [
          "id",
          "department",
          "title",
          "publicationNumber",
          "publicationDate",
          "categories",
          "involvedParty"
        ]
      },
      "GetSimilarAdvertsResponse": {
        "type": "object",
        "properties": {
          "adverts": {
            "description": "List of similar adverts",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdvertSimilar" }
          }
        },
        "required": ["adverts"]
      },
      "Paging": {
        "type": "object",
        "properties": {
          "page": { "type": "number", "example": 1 },
          "totalPages": { "type": "number", "example": 10 },
          "totalItems": { "type": "number", "example": 1000 },
          "nextPage": { "type": "number", "example": 2, "nullable": true },
          "previousPage": { "type": "number", "example": 1, "nullable": true },
          "pageSize": {
            "type": "number",
            "example": 10,
            "minimum": 1,
            "maximum": 100
          },
          "hasNextPage": { "type": "boolean", "example": true },
          "hasPreviousPage": { "type": "boolean", "example": false }
        },
        "required": [
          "page",
          "totalPages",
          "totalItems",
          "nextPage",
          "previousPage",
          "pageSize",
          "hasNextPage",
          "hasPreviousPage"
        ]
      },
      "GetAdvertsResponse": {
        "type": "object",
        "properties": {
          "adverts": {
            "description": "List of adverts",
            "type": "array",
            "items": { "$ref": "#/components/schemas/Advert" }
          },
          "paging": {
            "description": "Paging info",
            "allOf": [{ "$ref": "#/components/schemas/Paging" }]
          }
        },
        "required": ["adverts", "paging"]
      },
      "GetDepartmentResponse": {
        "type": "object",
        "properties": {
          "department": {
            "description": "The department that was found.",
            "allOf": [{ "$ref": "#/components/schemas/Department" }]
          }
        },
        "required": ["department"]
      },
      "GetDepartmentsResponse": {
        "type": "object",
        "properties": {
          "departments": {
            "description": "List of departments",
            "type": "array",
            "items": { "$ref": "#/components/schemas/Department" }
          },
          "paging": {
            "description": "Paging info",
            "allOf": [{ "$ref": "#/components/schemas/Paging" }]
          }
        },
        "required": ["departments", "paging"]
      },
      "MainCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique ID for the main category, GUID format.",
            "example": "00000000-0000-0000-0000-000000000000",
            "nullable": false
          },
          "title": {
            "type": "string",
            "description": "Title of the main category.",
            "example": "Dómstólar og réttarfar"
          },
          "slug": {
            "type": "string",
            "description": "Slug of the main category, used in URLs and API requests.",
            "example": "domstolar-og-rettarfar"
          },
          "departmentId": {
            "type": "string",
            "description": "Department linked to category.",
            "example": "00000000-0000-0000-0000-000000000000"
          },
          "description": {
            "type": "string",
            "description": "Description of the main category, used on front page.",
            "example": "Hæstiréttur, lögmenn, lögreglumál, dómsmál og landsdómur."
          },
          "categories": {
            "description": "List of sub categories under this main category.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/Category" }
          }
        },
        "required": [
          "id",
          "title",
          "slug",
          "departmentId",
          "description",
          "categories"
        ]
      },
      "GetMainCategoriesResponse": {
        "type": "object",
        "properties": {
          "mainCategories": {
            "description": "List of main categories",
            "type": "array",
            "items": { "$ref": "#/components/schemas/MainCategory" }
          },
          "paging": {
            "description": "Paging info",
            "allOf": [{ "$ref": "#/components/schemas/Paging" }]
          }
        },
        "required": ["mainCategories", "paging"]
      },
      "GetCategoriesResponse": {
        "type": "object",
        "properties": {
          "categories": {
            "description": "List of advert categories",
            "type": "array",
            "items": { "$ref": "#/components/schemas/Category" }
          },
          "paging": {
            "description": "Paging info",
            "allOf": [{ "$ref": "#/components/schemas/Paging" }]
          }
        },
        "required": ["categories", "paging"]
      },
      "GetInstitutionsResponse": {
        "type": "object",
        "properties": {
          "institutions": {
            "description": "List of involved parties",
            "type": "array",
            "items": { "$ref": "#/components/schemas/Institution" }
          },
          "paging": {
            "description": "Paging info",
            "allOf": [{ "$ref": "#/components/schemas/Paging" }]
          }
        },
        "required": ["institutions", "paging"]
      },
      "GetAdvertSignatureResponse": {
        "type": "object",
        "properties": {
          "items": {
            "description": "List of signatures",
            "nullable": false,
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdvertSignature" }
          },
          "paging": {
            "description": "Paging information",
            "nullable": false,
            "allOf": [{ "$ref": "#/components/schemas/Paging" }]
          }
        },
        "required": ["items", "paging"]
      },
      "CaseInProgress": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "d290f1ee-6c54-4b01-90e6-d701748f0851"
          },
          "status": {
            "type": "string",
            "enum": [
              "Innsent",
              "Grunnvinnsla",
              "Yfirlestur",
              "Tilbúið",
              "Útgefið",
              "Tekið úr birtingu",
              "Birtingu hafnað"
            ],
            "example": "Innsent",
            "description": "Status of the case"
          },
          "involvedParty": {
            "type": "string",
            "description": "Title of the institution",
            "example": "Dómsmálaráðuneytið"
          },
          "createdAt": {
            "type": "string",
            "example": "2024-01-01T09:00:00Z",
            "description": "Date the case was created. ISO 8601 date and time format in UTC."
          },
          "fastTrack": {
            "type": "boolean",
            "example": false,
            "description": "Requested fast track"
          },
          "requestedPublicationDate": {
            "type": "string",
            "example": "2024-01-01T09:00:00Z",
            "description": "Requested advert publication date. ISO 8601 date and time format in UTC."
          },
          "title": {
            "type": "string",
            "example": "TITILL á máli",
            "description": "Advert title with type"
          }
        },
        "required": [
          "id",
          "status",
          "involvedParty",
          "createdAt",
          "fastTrack",
          "requestedPublicationDate",
          "title"
        ]
      },
      "GetCasesInProgressReponse": {
        "type": "object",
        "properties": {
          "cases": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CaseInProgress" }
          },
          "paging": {
            "description": "Paging info",
            "allOf": [{ "$ref": "#/components/schemas/Paging" }]
          }
        },
        "required": ["cases", "paging"]
      },
      "ValidationResponse": {
        "type": "object",
        "properties": {
          "message": {
            "description": "Array of error messages",
            "example": [
              "message must be shorter than or equal to 10 characters"
            ],
            "type": "array",
            "items": { "type": "string" }
          },
          "error": {
            "type": "string",
            "description": "Error type",
            "example": "Bad Request"
          },
          "statusCode": {
            "type": "number",
            "description": "HTTP status code of response",
            "example": 400
          }
        },
        "required": ["message", "statusCode"]
      },
      "GetAdvertTypes": {
        "type": "object",
        "properties": {
          "types": {
            "description": "List of advert types",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdvertType" }
          },
          "paging": {
            "description": "Paging information",
            "allOf": [{ "$ref": "#/components/schemas/Paging" }]
          }
        },
        "required": ["types", "paging"]
      },
      "AdvertTypeError": {
        "type": "object",
        "properties": {
          "errorType": {
            "type": "string",
            "enum": ["DuplicateError", "ValidationError", "NotFoundError"]
          },
          "name": { "type": "string" },
          "message": { "type": "string" },
          "severity": { "type": "string", "enum": ["info", "warning", "error"] }
        },
        "required": ["errorType", "name", "message", "severity"]
      },
      "AdvertMainType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the main advert type"
          },
          "title": {
            "type": "string",
            "description": "The title of the main advert type"
          },
          "slug": {
            "type": "string",
            "description": "The slug of the main advert type"
          },
          "department": {
            "description": "The department this main type belongs to",
            "allOf": [{ "$ref": "#/components/schemas/Department" }]
          },
          "types": {
            "description": "All types under this main type",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdvertType" }
          }
        },
        "required": ["id", "title", "slug", "department", "types"]
      },
      "GetAdvertMainTypes": {
        "type": "object",
        "properties": {
          "mainTypes": {
            "description": "List of all main advert types",
            "type": "array",
            "items": { "$ref": "#/components/schemas/AdvertMainType" }
          },
          "paging": {
            "description": "Paging information",
            "allOf": [{ "$ref": "#/components/schemas/Paging" }]
          }
        },
        "required": ["mainTypes", "paging"]
      },
      "GetAdvertType": {
        "type": "object",
        "properties": {
          "type": {
            "description": "The advert type",
            "allOf": [{ "$ref": "#/components/schemas/AdvertType" }]
          }
        },
        "required": ["type"]
      },
      "GetAdvertMainType": {
        "type": "object",
        "properties": {
          "mainType": {
            "description": "The main advert type",
            "allOf": [{ "$ref": "#/components/schemas/AdvertMainType" }]
          }
        },
        "required": ["mainType"]
      },
      "GetPdfRespone": {
        "type": "object",
        "properties": {
          "content": { "type": "string", "description": "Base64 encoded PDF" }
        },
        "required": ["content"]
      },
      "GetPdfUrlResponse": {
        "type": "object",
        "properties": { "url": { "type": "string" } },
        "required": ["url"]
      }
    }
  }
}
