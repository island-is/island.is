{
  "openapi": "3.0.0",
  "paths": {
    "/forms": {
      "post": {
        "operationId": "submitForm",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ApplicationInput" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FormSubmitSuccessModel"
                }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "tags": ["Frigg"]
      }
    },
    "/forms/types": {
      "get": {
        "description": "Get types.",
        "operationId": "getFormTypes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "type": "array", "items": { "type": "string" } }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "Get list of types of forms",
        "tags": ["Frigg"]
      }
    },
    "/key-options": {
      "get": {
        "description": "Get all key options, can be filtered by type. If type input is not valid, all key options will be returned.",
        "operationId": "getAllKeyOptions",
        "parameters": [
          {
            "name": "type",
            "required": false,
            "in": "query",
            "description": "Type of key option",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/KeyOption" }
                }
              }
            }
          }
        },
        "summary": "Get all key options.",
        "tags": ["Frigg"]
      }
    },
    "/key-options/types": {
      "get": {
        "description": "Get types.",
        "operationId": "getKeyOptionsTypes",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "type": "array", "items": { "type": "string" } }
              }
            }
          }
        },
        "summary": "Get list of types of key options",
        "tags": ["Frigg"]
      }
    },
    "/health": {
      "get": {
        "operationId": "health",
        "parameters": [],
        "responses": { "200": { "description": "" } },
        "tags": ["Utils"]
      }
    },
    "/schools": {
      "get": {
        "description": "Returns a paginated collection of schools.",
        "operationId": "getAllSchoolsByMunicipality",
        "parameters": [
          {
            "name": "sort",
            "required": false,
            "in": "query",
            "description": "Identifies the sort criteria to be used for the records in the response message. Use with the orderBy parameter. The sort order should follow the [UNICODE, 16] standard.",
            "schema": { "type": "string" }
          },
          {
            "name": "orderBy",
            "required": false,
            "in": "query",
            "description": "The form of ordering for response to the sorted request i.e. ascending (asc) or descending (desc). The sort order should follow the [UNICODE, 16] standard.",
            "schema": { "type": "string", "enum": ["asc", "desc"] }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "schema": { "default": 100, "type": "number", "minimum": 1 }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "schema": { "default": 0, "type": "number", "minimum": 0 }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/OrganizationModel" }
                }
              }
            }
          },
          "default": {
            "headers": {
              "x-total-count": {
                "description": "The total number of resources that are available to be returned",
                "schema": { "type": "integer" }
              }
            },
            "description": ""
          }
        },
        "summary": "Get all schools.",
        "tags": ["Frigg"]
      }
    },
    "/students/{nationalId}": {
      "get": {
        "description": "Get user by Id.",
        "operationId": "getUserBySourcedId",
        "parameters": [
          {
            "name": "nationalId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UserModel" }
              }
            }
          }
        },
        "security": [{ "bearer": [] }],
        "summary": "Get user by nationalId",
        "tags": ["Frigg"]
      }
    },
    "/municipalities/{municipalityId}/applications": {
      "get": {
        "operationId": "getApplications",
        "parameters": [
          {
            "name": "municipalityId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "schema": { "type": "string", "enum": ["registration"] }
          },
          {
            "name": "since",
            "required": false,
            "in": "query",
            "schema": { "type": "string" }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "To define the download segmentation value i.e. the maximum number of records to be contained in the response.",
            "schema": { "default": 100, "type": "number", "minimum": 1 }
          },
          {
            "name": "offset",
            "required": false,
            "in": "query",
            "description": "The number of the first record to be supplied in the segmented response message.",
            "schema": { "default": 0, "type": "number", "minimum": 0 }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns list of applications",
            "content": {
              "application/json": { "schema": { "type": "object" } }
            }
          },
          "default": {
            "headers": {
              "x-total-count": {
                "description": "The total number of resources that are available to be returned",
                "schema": { "type": "integer" }
              }
            },
            "description": ""
          }
        },
        "summary": "Returns a paginated list of applications",
        "tags": ["Frigg"]
      }
    },
    "/municipalities/{municipalityId}/applications/{applicationId}/pdf": {
      "get": {
        "operationId": "getApplicationPdf",
        "parameters": [
          {
            "name": "municipalityId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          },
          {
            "name": "applicationId",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns PDF for application",
            "content": {
              "application/pdf": {
                "schema": { "type": "string", "format": "binary" }
              }
            }
          }
        },
        "summary": "Returns a PDF for an application",
        "tags": ["Frigg"]
      }
    }
  },
  "info": {
    "title": "MMS FORM SERVICE API",
    "description": "Frigg - student information system",
    "version": "1",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Please enter token in from IAS",
        "type": "http"
      }
    },
    "schemas": {
      "AddressInput": {
        "type": "object",
        "properties": {
          "address": { "type": "string" },
          "postCode": { "type": "string" },
          "municipalityId": { "type": "string" }
        },
        "required": ["address", "postCode"]
      },
      "UserInput": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "nationalId": { "type": "string" },
          "preferredName": { "type": "string" },
          "gender": {
            "type": "string",
            "enum": ["male", "female", "unspecified", "other"]
          },
          "nationality": {
            "type": "string",
            "description": "The ISO code for nationality of user. Should come from the national registry."
          },
          "pronouns": { "type": "array", "items": { "type": "string" } },
          "domicile": { "$ref": "#/components/schemas/AddressInput" },
          "residence": { "$ref": "#/components/schemas/AddressInput" }
        },
        "required": ["name", "nationalId"]
      },
      "AgentInput": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "nationalId": { "type": "string" },
          "preferredName": { "type": "string" },
          "nationality": {
            "type": "string",
            "description": "The ISO code for nationality of user. Should come from the national registry."
          },
          "pronouns": { "type": "array", "items": { "type": "string" } },
          "domicile": { "$ref": "#/components/schemas/AddressInput" },
          "email": { "type": "string", "example": "name@frigg.is" },
          "phone": { "type": "string" },
          "type": {
            "type": "string",
            "description": "Type of agent",
            "enum": [
              "guardian",
              "relative",
              "sibling",
              "parent",
              "emergencyContact"
            ]
          },
          "relationTypeId": {
            "type": "string",
            "description": "Agents connection to the student, strings can be found under key option type \"relation\""
          },
          "preferredLanguage": {
            "type": "string",
            "description": "The preferred language of the agent, should be a valid code."
          },
          "requiresInterpreter": {
            "type": "boolean",
            "description": "If the agent requires an interpreter for communication."
          }
        },
        "required": ["name", "nationalId", "type"]
      },
      "RegistrationInput": {
        "type": "object",
        "properties": {
          "preRegisteredId": {
            "type": "string",
            "description": "If a user has an open ongoing registration, for example first year students submit the id here"
          },
          "defaultOrganizationId": {
            "type": "string",
            "description": "The school a student should or does belong to, pre registered school or current school"
          },
          "selectedOrganizationId": {
            "type": "string",
            "description": "The school selected for a student in the application process"
          },
          "requestingMeeting": { "type": "boolean", "default": false },
          "expectedStartDate": { "format": "date-time", "type": "string" },
          "expectedEndDate": { "format": "date-time", "type": "string" },
          "reason": { "type": "string" },
          "tempDomicile": {
            "description": "Temporary domicile",
            "allOf": [{ "$ref": "#/components/schemas/AddressInput" }]
          }
        },
        "required": ["selectedOrganizationId", "expectedStartDate"]
      },
      "HealthInput": {
        "type": "object",
        "properties": {
          "foodAllergiesOrIntolerances": {
            "type": "array",
            "items": { "type": "string" }
          },
          "allergies": { "type": "array", "items": { "type": "string" } },
          "usesEpipen": { "type": "boolean", "default": false },
          "hasConfirmedMedicalDiagnoses": {
            "type": "boolean",
            "default": false
          },
          "requestsMedicationAdministration": {
            "type": "boolean",
            "default": false
          }
        }
      },
      "CaseWorkerInput": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "email": { "type": "string" },
          "phone": { "type": "string" },
          "type": {
            "type": "string",
            "enum": ["caseManager", "supportManager"]
          }
        },
        "required": ["name", "email", "type"]
      },
      "SocialInput": {
        "type": "object",
        "properties": {
          "hasHadSupport": { "type": "boolean", "default": false },
          "hasDiagnoses": { "type": "boolean", "default": false },
          "hasIntegratedServices": { "type": "boolean", "default": false },
          "caseWorkers": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/CaseWorkerInput" }
          }
        }
      },
      "LanguageInput": {
        "type": "object",
        "properties": {
          "languageEnvironment": { "type": "string" },
          "preferredLanguage": { "type": "string" },
          "signLanguage": { "type": "boolean" },
          "languages": { "type": "array", "items": { "type": "string" } }
        },
        "required": [
          "languageEnvironment",
          "preferredLanguage",
          "signLanguage",
          "languages"
        ]
      },
      "ApplicationInput": {
        "type": "object",
        "properties": {
          "type": { "type": "string", "enum": ["registration"] },
          "user": { "$ref": "#/components/schemas/UserInput" },
          "agents": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/AgentInput" }
          },
          "registration": { "$ref": "#/components/schemas/RegistrationInput" },
          "health": { "$ref": "#/components/schemas/HealthInput" },
          "social": { "$ref": "#/components/schemas/SocialInput" },
          "language": { "$ref": "#/components/schemas/LanguageInput" }
        },
        "required": ["type", "user"]
      },
      "FormSubmitSuccessModel": {
        "type": "object",
        "properties": {
          "applicationId": {
            "type": "string",
            "description": "Id of form created"
          },
          "state": { "type": "string", "description": "Status of form" }
        },
        "required": ["applicationId", "state"]
      },
      "Value": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "Text to be displayed for option",
            "example": "Fish allergy"
          },
          "language": {
            "type": "string",
            "description": "Language code of describing the language text is translated to.",
            "example": "en"
          }
        },
        "required": ["content", "language"]
      },
      "Option": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "description": "Id of option." },
          "key": {
            "type": "string",
            "description": "Key of the option.",
            "example": "fish"
          },
          "value": {
            "description": "List of translations of readable strings of the option.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/Value" }
          }
        },
        "required": ["id", "key", "value"]
      },
      "KeyOption": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of options.",
            "example": "allergy"
          },
          "options": {
            "description": "List of options.",
            "type": "array",
            "items": { "$ref": "#/components/schemas/Option" }
          }
        },
        "required": ["type", "options"]
      },
      "AddressModel": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "address": { "type": "string" },
          "municipality": { "type": "string", "nullable": true },
          "postCode": { "type": "string" },
          "country": { "type": "string", "nullable": true },
          "houseNumber": { "type": "number", "nullable": true },
          "streetNumber": { "type": "number", "nullable": true },
          "apartmentNumber": { "type": "number", "nullable": true },
          "municipalityId": { "type": "string", "nullable": true }
        },
        "required": [
          "id",
          "address",
          "municipality",
          "postCode",
          "country",
          "houseNumber",
          "streetNumber",
          "apartmentNumber",
          "municipalityId"
        ]
      },
      "OrganizationModel": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "nationalId": { "type": "string", "nullable": true },
          "name": { "type": "string" },
          "nameDative": { "type": "string", "nullable": true },
          "slug": { "type": "string", "nullable": true },
          "type": {
            "type": "string",
            "enum": [
              "childCare",
              "municipality",
              "national",
              "privateOwner",
              "school"
            ]
          },
          "gradeLevels": { "type": "array", "items": { "type": "string" } },
          "address": {
            "nullable": true,
            "allOf": [{ "$ref": "#/components/schemas/AddressModel" }]
          },
          "managing": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/OrganizationModel" }
          },
          "unitId": { "type": "string", "nullable": true },
          "email": { "type": "string", "nullable": true },
          "phone": { "type": "string", "nullable": true },
          "website": { "type": "string", "nullable": true }
        },
        "required": [
          "id",
          "nationalId",
          "name",
          "nameDative",
          "slug",
          "type",
          "gradeLevels",
          "address",
          "managing",
          "unitId",
          "email",
          "phone",
          "website"
        ]
      },
      "HealthProfileModel": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "userId": { "type": "string" },
          "allergies": { "type": "array", "items": { "type": "string" } },
          "foodAllergiesOrIntolerances": {
            "type": "array",
            "items": { "type": "string" }
          },
          "usesEpipen": { "type": "boolean" },
          "hasConfirmedMedicalDiagnoses": { "type": "boolean" },
          "requestsMedicationAdministration": { "type": "boolean" }
        },
        "required": [
          "id",
          "userId",
          "allergies",
          "foodAllergiesOrIntolerances",
          "usesEpipen",
          "hasConfirmedMedicalDiagnoses",
          "requestsMedicationAdministration"
        ]
      },
      "CaseWorkerModel": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "email": { "type": "string" },
          "phone": { "type": "string" },
          "type": {
            "type": "string",
            "enum": ["caseManager", "supportManager"]
          }
        },
        "required": ["id", "name", "email", "phone", "type"]
      },
      "SocialProfileModel": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "userId": { "type": "string" },
          "hasDiagnoses": { "type": "boolean", "default": false },
          "hasIntegratedServices": { "type": "boolean", "default": false },
          "caseWorkers": {
            "nullable": true,
            "type": "array",
            "items": { "$ref": "#/components/schemas/CaseWorkerModel" }
          },
          "hasHadSupport": { "type": "boolean", "default": false }
        },
        "required": [
          "id",
          "userId",
          "hasDiagnoses",
          "hasIntegratedServices",
          "caseWorkers",
          "hasHadSupport"
        ]
      },
      "LanguageProfileModel": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "userId": { "type": "string" },
          "languageEnvironment": { "type": "string" },
          "preferredLanguage": { "type": "string" },
          "signLanguage": { "type": "boolean" },
          "languages": { "type": "array", "items": { "type": "string" } }
        },
        "required": [
          "id",
          "userId",
          "languageEnvironment",
          "preferredLanguage",
          "signLanguage",
          "languages"
        ]
      },
      "UserModel": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "nationalId": { "type": "string" },
          "nationalIdType": {
            "type": "string",
            "enum": ["unknown", "individual", "system"]
          },
          "name": { "type": "string" },
          "nationality": { "type": "string", "nullable": true },
          "preferredName": { "type": "string", "nullable": true },
          "pronouns": { "type": "array", "items": { "type": "string" } },
          "gradeLevel": { "type": "string" },
          "email": { "type": "string", "nullable": true },
          "domicile": {
            "nullable": true,
            "allOf": [{ "$ref": "#/components/schemas/AddressModel" }]
          },
          "residence": {
            "nullable": true,
            "allOf": [{ "$ref": "#/components/schemas/AddressModel" }]
          },
          "healthProfile": {
            "nullable": true,
            "allOf": [{ "$ref": "#/components/schemas/HealthProfileModel" }]
          },
          "socialProfile": {
            "nullable": true,
            "allOf": [{ "$ref": "#/components/schemas/SocialProfileModel" }]
          },
          "languageProfile": {
            "nullable": true,
            "allOf": [{ "$ref": "#/components/schemas/LanguageProfileModel" }]
          },
          "primaryOrgId": { "type": "string", "nullable": true },
          "affiliations": {
            "nullable": true,
            "type": "array",
            "items": { "type": "string" }
          },
          "agents": {
            "nullable": true,
            "type": "array",
            "items": { "type": "string" }
          },
          "phone": { "type": "string", "nullable": true },
          "mobile": { "type": "string", "nullable": true }
        },
        "required": [
          "id",
          "nationalId",
          "nationalIdType",
          "name",
          "nationality",
          "preferredName",
          "pronouns",
          "gradeLevel",
          "email",
          "domicile",
          "residence",
          "healthProfile",
          "socialProfile",
          "languageProfile",
          "primaryOrgId",
          "affiliations",
          "agents",
          "phone",
          "mobile"
        ]
      }
    }
  }
}
