{
  "openapi": "3.0.1",
  "info": {
    "title": "SGS Rest API",
    "description": "Mileage reading API developed in .Net8.0 - Release-24 : 20250306.1",
    "contact": {
      "name": "Samg√∂ngustofa",
      "email": "tolvuhjalp@samgongustofa.is"
    },
    "version": "1.0"
  },
  "servers": [{ "url": "/vehicle/mileagereading" }],
  "paths": {
    "/authenticate": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Authentication for Domain user",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The requested API version",
            "schema": { "type": "string", "default": "1.0" }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": { "type": "string", "default": "1.0" }
          }
        ],
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": { "$ref": "#/components/schemas/AuthenticateModel" }
            },
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AuthenticateModel" }
            },
            "text/json": {
              "schema": { "$ref": "#/components/schemas/AuthenticateModel" }
            },
            "application/*+json": {
              "schema": { "$ref": "#/components/schemas/AuthenticateModel" }
            },
            "application/xml": {
              "schema": { "$ref": "#/components/schemas/AuthenticateModel" }
            },
            "text/xml": {
              "schema": { "$ref": "#/components/schemas/AuthenticateModel" }
            },
            "application/*+xml": {
              "schema": { "$ref": "#/components/schemas/AuthenticateModel" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": { "$ref": "#/components/schemas/User" }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              },
              "text/json": {
                "schema": { "$ref": "#/components/schemas/User" }
              },
              "application/xml": {
                "schema": { "$ref": "#/components/schemas/User" }
              },
              "text/xml": { "schema": { "$ref": "#/components/schemas/User" } }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              },
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              },
              "text/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              },
              "application/xml": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              },
              "text/xml": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          }
        }
      }
    },
    "/": {
      "post": {
        "tags": ["MileageReading"],
        "summary": "Post mileage reading",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The requested API version",
            "schema": { "type": "string", "default": "1.0" }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": { "type": "string", "default": "1.0" }
          }
        ],
        "requestBody": {
          "description": "Mileage reading model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PostMileageReadingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostMileageReadingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PostMileageReadingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PostMileageReadingModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PostMileageReadingModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PostMileageReadingModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/PostMileageReadingModel"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MileageReadingDto" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["MileageReading"],
        "summary": "Updates mileage reading",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The requested API version",
            "schema": { "type": "string", "default": "1.0" }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": { "type": "string", "default": "1.0" }
          }
        ],
        "requestBody": {
          "description": "Mileage reading model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PutMileageReadingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PutMileageReadingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PutMileageReadingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PutMileageReadingModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PutMileageReadingModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PutMileageReadingModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/PutMileageReadingModel"
              }
            }
          }
        },
        "responses": {
          "204": { "description": "No Content" },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["MileageReading"],
        "summary": "Deletes a mileage reading without error checks.",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The requested API version",
            "schema": { "type": "string", "default": "1.0" }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": { "type": "string", "default": "1.0" }
          }
        ],
        "requestBody": {
          "description": "The details of the mileage reading to delete.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteMileageReadingNoErrorCheckModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteMileageReadingNoErrorCheckModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteMileageReadingNoErrorCheckModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteMileageReadingNoErrorCheckModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/DeleteMileageReadingNoErrorCheckModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/DeleteMileageReadingNoErrorCheckModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/DeleteMileageReadingNoErrorCheckModel"
              }
            }
          }
        },
        "responses": {
          "204": { "description": "No Content" },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          }
        }
      }
    },
    "/{permno}": {
      "get": {
        "tags": ["MileageReading"],
        "summary": "Populate all mileage readings for a vehicle",
        "operationId": "GetMileageReading",
        "parameters": [
          {
            "name": "permno",
            "in": "path",
            "description": "Vehicle permanent number",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The requested API version",
            "schema": { "type": "string", "default": "1.0" }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": { "type": "string", "default": "1.0" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/MileageReadingDto" }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          }
        }
      }
    },
    "/{permno}/internalid/{internalId}": {
      "get": {
        "tags": ["MileageReading"],
        "summary": "Retrieves a mileage reading by vehicle permno and internal ID",
        "operationId": "GetMileageReadingWithInternalId",
        "parameters": [
          {
            "name": "permno",
            "in": "path",
            "description": "The vehicle's permanent number",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "internalId",
            "in": "path",
            "description": "The internal ID of the mileage reading",
            "required": true,
            "schema": { "type": "integer", "format": "int32" }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The requested API version",
            "schema": { "type": "string", "default": "1.0" }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": { "type": "string", "default": "1.0" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/MileageReadingDto" }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          }
        }
      }
    },
    "/nextavailablemileageregistration/{permno}": {
      "get": {
        "tags": ["MileageReading"],
        "summary": "Get next available mileage registration",
        "parameters": [
          {
            "name": "permno",
            "in": "path",
            "description": "Vehicle permanent number",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The requested API version",
            "schema": { "type": "string", "default": "1.0" }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": { "type": "string", "default": "1.0" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "string" } }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          }
        }
      }
    },
    "/canregistermileage/{permno}": {
      "get": {
        "tags": ["MileageReading"],
        "summary": "Can vehicle register mileage",
        "parameters": [
          {
            "name": "permno",
            "in": "path",
            "description": "Vehicle permanent number",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The requested API version",
            "schema": { "type": "string", "default": "1.0" }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": { "type": "string", "default": "1.0" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "boolean" } }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          }
        }
      }
    },
    "/requiresmileageregistration/{permno}": {
      "get": {
        "tags": ["MileageReading"],
        "summary": "Is vehicle required to register mileage",
        "parameters": [
          {
            "name": "permno",
            "in": "path",
            "description": "Vehicle permanent number",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The requested API version",
            "schema": { "type": "string", "default": "1.0" }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": { "type": "string", "default": "1.0" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": { "schema": { "type": "boolean" } }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          }
        }
      }
    },
    "/requestbulkmileagereading": {
      "post": {
        "tags": ["MileageReading"],
        "summary": "Request a bulk mileage reading, only to be used by Island.is",
        "parameters": [
          {
            "name": "api-version",
            "in": "header",
            "description": "The requested API version",
            "schema": { "type": "string", "default": "1.0" }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": { "type": "string", "default": "1.0" }
          }
        ],
        "requestBody": {
          "description": "Post model",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/PostBulkMileageReadingModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostBulkMileageReadingModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/PostBulkMileageReadingModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/PostBulkMileageReadingModel"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PostBulkMileageReadingModel"
              }
            },
            "text/xml": {
              "schema": {
                "$ref": "#/components/schemas/PostBulkMileageReadingModel"
              }
            },
            "application/*+xml": {
              "schema": {
                "$ref": "#/components/schemas/PostBulkMileageReadingModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkMileageReadingRequestResultDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkMileageReadingRequestResultDto"
                }
              }
            }
          }
        }
      }
    },
    "/getbulkmileagereadingrequests": {
      "get": {
        "tags": ["MileageReading"],
        "summary": "Populate all mileage readings for a vehicle",
        "parameters": [
          {
            "name": "persidno",
            "in": "query",
            "description": "Vehicle permanent number",
            "schema": { "type": "string" }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The requested API version",
            "schema": { "type": "string", "default": "1.0" }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": { "type": "string", "default": "1.0" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BulkMileageReadingRequestDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          }
        }
      }
    },
    "/getbulkmileagereadingrequestdetails/{guid}": {
      "get": {
        "tags": ["MileageReading"],
        "summary": "Populate all mileage readings for a vehicle",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "description": "Guid of bulk request",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The requested API version",
            "schema": { "type": "string", "default": "1.0" }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": { "type": "string", "default": "1.0" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BulkMileageReadingRequestDetailDto"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          }
        }
      }
    },
    "/getbulkmileagereadingrequeststatus/{guid}": {
      "get": {
        "tags": ["MileageReading"],
        "summary": "Get status of bulk mileage request by guid",
        "parameters": [
          {
            "name": "guid",
            "in": "path",
            "description": "Guid",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "api-version",
            "in": "header",
            "description": "The requested API version",
            "schema": { "type": "string", "default": "1.0" }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The requested API version",
            "schema": { "type": "string", "default": "1.0" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkMileageReadingStatusDto"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ProblemDetails" }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AuthenticateModel": {
        "required": ["password", "username"],
        "type": "object",
        "properties": {
          "username": { "minLength": 1, "type": "string" },
          "password": { "minLength": 1, "type": "string" }
        },
        "additionalProperties": false
      },
      "BulkMileageReadingRequestDetailDto": {
        "type": "object",
        "properties": {
          "guid": { "type": "string", "description": "Guid", "nullable": true },
          "permno": {
            "type": "string",
            "description": "Vehicle permanent number",
            "nullable": true
          },
          "mileage": {
            "type": "integer",
            "description": "Mileage",
            "format": "int32",
            "nullable": true
          },
          "returnCode": {
            "type": "string",
            "description": "Return code",
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BulkMileageReadingRequestDetailErrors"
            },
            "description": "List of errors if any",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Dto for bulk mileage reading request details"
      },
      "BulkMileageReadingRequestDetailErrors": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string",
            "description": "Error code",
            "nullable": true
          },
          "warningSerial": {
            "type": "integer",
            "description": "Warning serial",
            "format": "int32"
          },
          "errorText": {
            "type": "string",
            "description": "Error text",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Class for errors on mileage reading in bulk"
      },
      "BulkMileageReadingRequestDto": {
        "type": "object",
        "properties": {
          "guid": { "type": "string", "description": "Guid", "nullable": true },
          "reportingPersidno": {
            "type": "string",
            "description": "Reporting person social security number",
            "nullable": true
          },
          "reportingPersidnoName": {
            "type": "string",
            "description": "Reporting person name",
            "nullable": true
          },
          "originCode": {
            "type": "string",
            "description": "Origin code",
            "nullable": true
          },
          "originName": {
            "type": "string",
            "description": "Origin name",
            "nullable": true
          },
          "dateInserted": {
            "type": "string",
            "description": "When was bulk request inserted",
            "format": "date-time",
            "nullable": true
          },
          "dateStarted": {
            "type": "string",
            "description": "When did bulk request start working",
            "format": "date-time",
            "nullable": true
          },
          "dateFinished": {
            "type": "string",
            "description": "When dd bulk request finish",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Dto for bulk mileage reading requests"
      },
      "BulkMileageReadingRequestResultDto": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "description": "Guid to check for status and results",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Dto for bulk mileage reading request"
      },
      "BulkMileageReadingStatusDto": {
        "type": "object",
        "properties": {
          "guid": {
            "type": "string",
            "description": "Guid of request",
            "nullable": true
          },
          "totalVehicles": {
            "type": "integer",
            "description": "Total vehicles in the request",
            "format": "int32",
            "nullable": true
          },
          "done": {
            "type": "integer",
            "description": "Total done",
            "format": "int32",
            "nullable": true
          },
          "remaining": {
            "type": "integer",
            "description": "Remaining vehicles",
            "format": "int32",
            "nullable": true
          },
          "processOk": {
            "type": "integer",
            "description": "How many readings were ok",
            "format": "int32",
            "nullable": true
          },
          "processWithErrors": {
            "type": "integer",
            "description": "How many readings with errors/warnings/locks",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Dto for status of bulk mileage reading request"
      },
      "DeleteMileageReadingNoErrorCheckModel": {
        "required": ["internalId", "permno"],
        "type": "object",
        "properties": {
          "permno": { "maxLength": 5, "minLength": 5, "type": "string" },
          "internalId": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "format": "int32"
          },
          "reportingPersidno": { "type": "string", "nullable": true }
        },
        "additionalProperties": false
      },
      "MileageReadingDto": {
        "type": "object",
        "properties": {
          "permno": {
            "type": "string",
            "description": "Vehicle permanent number",
            "nullable": true
          },
          "internalId": {
            "type": "integer",
            "description": "Internal id",
            "format": "int32"
          },
          "readDate": {
            "type": "string",
            "description": "Date of mileage reading",
            "format": "date-time",
            "nullable": true
          },
          "originCode": {
            "type": "string",
            "description": "Where does reading come from",
            "nullable": true
          },
          "mileage": {
            "type": "integer",
            "description": "Mileage reading",
            "format": "int32"
          },
          "operation": {
            "type": "string",
            "description": "Operation (I,U,D)",
            "nullable": true
          },
          "reportingPersidno": {
            "type": "string",
            "description": "If user registering this mileage is not owner/operator, the owner/operator social security number should be in here",
            "nullable": true
          },
          "transactionDate": {
            "type": "string",
            "description": "Date of transaction",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Mileage data transfer object"
      },
      "MileageReadingModel": {
        "type": "object",
        "properties": {
          "permno": {
            "type": "string",
            "description": "Vehicle permno",
            "nullable": true
          },
          "mileage": {
            "type": "integer",
            "description": "Milegae",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "One mileage entity"
      },
      "PostBulkMileageReadingModel": {
        "type": "object",
        "properties": {
          "originCode": {
            "type": "string",
            "description": "Origin code of reading",
            "nullable": true
          },
          "mileageData": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/MileageReadingModel" },
            "description": "Mileage reading data",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Bulk mileage reading model"
      },
      "PostMileageReadingModel": {
        "required": ["mileage", "originCode", "permno"],
        "type": "object",
        "properties": {
          "permno": {
            "maxLength": 5,
            "minLength": 5,
            "type": "string",
            "description": "Vehicle permanent number"
          },
          "readDate": {
            "type": "string",
            "description": "Date of mileage reading, is always sysdate",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "originCode": {
            "maxLength": 10,
            "minLength": 1,
            "type": "string",
            "description": "Where does reading come from"
          },
          "mileage": {
            "maximum": 9999999,
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Mileage reading",
            "format": "int32"
          },
          "operation": {
            "type": "string",
            "description": "Operation (I,U,D), is always I for Insert",
            "nullable": true,
            "readOnly": true
          },
          "reportingPersidno": {
            "maxLength": 10,
            "minLength": 10,
            "pattern": "[0-7]\\d[01]\\d{3}[-]*\\d{3}[09]",
            "type": "string",
            "description": "If user registering this mileage is not owner/operator, the owner/operator social security number should be in here",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Model to post mileage reading"
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": { "type": "string", "nullable": true },
          "title": { "type": "string", "nullable": true },
          "status": { "type": "integer", "format": "int32", "nullable": true },
          "detail": { "type": "string", "nullable": true },
          "instance": { "type": "string", "nullable": true }
        },
        "additionalProperties": false
      },
      "PutMileageReadingModel": {
        "required": ["internalId", "mileage", "permno"],
        "type": "object",
        "properties": {
          "permno": {
            "maxLength": 5,
            "minLength": 5,
            "type": "string",
            "description": "Vehicle permanent number"
          },
          "readDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "readOnly": true
          },
          "internalId": {
            "type": "integer",
            "description": "Internal id",
            "format": "int32"
          },
          "mileage": {
            "maximum": 9999999,
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Mileage reading",
            "format": "int32"
          },
          "operation": { "type": "string", "nullable": true, "readOnly": true },
          "originCode": { "type": "string", "nullable": true }
        },
        "additionalProperties": false,
        "description": "Model to post mileage reading"
      },
      "ReturnTypeMessage": {
        "type": "object",
        "properties": {
          "lookupNo": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "warnSever": { "type": "string", "nullable": true },
          "errorMess": { "type": "string", "nullable": true },
          "permno": { "type": "string", "nullable": true },
          "warningSerialNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "nullable": true },
          "userName": { "type": "string", "nullable": true },
          "normalizedUserName": { "type": "string", "nullable": true },
          "email": { "type": "string", "nullable": true },
          "normalizedEmail": { "type": "string", "nullable": true },
          "emailConfirmed": { "type": "boolean" },
          "passwordHash": { "type": "string", "nullable": true },
          "securityStamp": { "type": "string", "nullable": true },
          "concurrencyStamp": { "type": "string", "nullable": true },
          "phoneNumber": { "type": "string", "nullable": true },
          "phoneNumberConfirmed": { "type": "boolean" },
          "twoFactorEnabled": { "type": "boolean" },
          "lockoutEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lockoutEnabled": { "type": "boolean" },
          "accessFailedCount": { "type": "integer", "format": "int32" },
          "username": { "type": "string", "nullable": true },
          "password": { "type": "string", "nullable": true },
          "jwtToken": { "type": "string", "nullable": true },
          "role": { "type": "string", "nullable": true }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [{ "Bearer": [] }]
}
