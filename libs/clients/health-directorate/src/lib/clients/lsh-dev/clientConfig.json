{
  "openapi": "3.0.1",
  "info": {
    "title": "PatientApp API",
    "description": "Development for patient APP",
    "contact": {
      "name": "Adeline Tracz",
      "email": "adeline@landspitali.is"
    },
    "license": {
      "name": "Proprietary"
    },
    "version": "2.0"
  },
  "paths": {
    "/api/v2/AppInfo/LatestVersion": {
      "get": {
        "tags": ["AppInfo"],
        "summary": "Get latest app version",
        "responses": {
          "200": {
            "description": "Return latest app version and date registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppVersionInfo"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/BookAppointment/GetAvailableResources": {
      "get": {
        "tags": ["BookAppointment"],
        "summary": "Get resources that you can book appointsment from.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailableResources"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/BookAppointment/GetDaysWithSchedule/{ID}": {
      "get": {
        "tags": ["BookAppointment"],
        "summary": "Get days where resource has a schedule that is open for bookings from the app",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "ID of resource and date range to check on",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "{dd.MM.yyyy}",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "{dd.MM.yyyy}",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DaysWithOpenSchedule"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/BookAppointment/GetNextDaysWithSchedule/{ID}": {
      "get": {
        "tags": ["BookAppointment"],
        "summary": "Get days where resource has a schedule that is open for bookings from the app",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "ID of resource and amount of days to respond with",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of days",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DaysWithOpenSchedule"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/BookAppointment/GetTimeSlotsForDate/{ID}": {
      "get": {
        "tags": ["BookAppointment"],
        "summary": "Get days where resource has a schedule that is open for bookings from the app",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "ID of resource and date range to check on",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "{dd.MM.yyyy}",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OpenTimeSlots"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/BookAppointment/BookAppointment": {
      "post": {
        "tags": ["BookAppointment"],
        "summary": "Make an appointment at the input date and time with resource",
        "requestBody": {
          "description": "ID of resource and date, time, and message to make appointment with",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BookAppointment"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BookAppointment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/BookAppointment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/BookAppointment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LshGenericContainer"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BookAppointmentaResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/BookAppointment/IsAppointmentModifiable/{GUID}": {
      "get": {
        "tags": ["BookAppointment"],
        "summary": "Check if appointment item with specific GUID is modifiable (cancellable and changeable)",
        "parameters": [
          {
            "name": "GUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericIsPermittedResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/BookAppointment/GetBookableIDByGUID/{GUID}": {
      "get": {
        "tags": ["BookAppointment"],
        "summary": "Check if appointment item with specific GUID is modifiable (cancellable and changeable)",
        "parameters": [
          {
            "name": "GUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Resource"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/BookAppointment/CancelAppointment": {
      "post": {
        "tags": ["BookAppointment"],
        "summary": "Cancel appointment by GUID",
        "requestBody": {
          "description": "GUID of booking to cancel",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CancelAppointment"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelAppointment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelAppointment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CancelAppointment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericStatusResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/BookAppointment/EditAppointment": {
      "post": {
        "tags": ["BookAppointment"],
        "summary": "Cancel appointment by GUID and make an appointment at the input date and time with the same resource as previous appointment had",
        "requestBody": {
          "description": "GUID of booking to change, as well as date, time and message for new appointment",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/EditAppointment"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EditAppointment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EditAppointment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EditAppointment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LshGenericContainer"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericStatusResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/BookAppointment/GetAppointments/{ID}": {
      "get": {
        "tags": ["BookAppointment"],
        "summary": "Get booked appoints for the given patient with the given resource ID",
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "description": "ID of resource to check appointments for",
            "required": true,
            "schema": {
              "type": "string",
              "default": ""
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppointmentList"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/Feedback": {
      "post": {
        "tags": ["Feedback"],
        "summary": "Create feedback",
        "description": "Post feedback about app",
        "requestBody": {
          "description": "JSON object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientFeedback"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Feedback created, id of created object returned",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "User not able to add feedback. User not registered as patient"
          },
          "422": {
            "description": "Inputdata invalid, sanitazion failed for input"
          },
          "500": {
            "description": "Internal error, Unknown error"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/Feedback/GetCategories": {
      "get": {
        "tags": ["Feedback"],
        "summary": "Get Categories with options",
        "responses": {
          "200": {
            "description": "Return list of categories",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageCategory"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/Food/Menu": {
      "get": {
        "tags": ["Food"],
        "summary": "Get menu by days. Optional type filter to get specific menus",
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "{dd.MM.yyyy}",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "schema": {
              "enum": ["All", "ForPatient"],
              "type": "string",
              "description": "Enum for different types of items in timeline"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Menu"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/Implant/Operation": {
      "get": {
        "tags": ["Implant"],
        "summary": "Get list of operations with one or more implant cards attached to it",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Operation"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/Implant/Operation/{OperationGUID}": {
      "get": {
        "tags": ["Implant"],
        "summary": "Get list of operations with one or more implant cards attached to it",
        "parameters": [
          {
            "name": "OperationGUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Implant"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/Implant/Implant/{ImplantGUID}": {
      "get": {
        "tags": ["Implant"],
        "summary": "Get implant by GUID",
        "parameters": [
          {
            "name": "ImplantGUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImplantWalletPass"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/Implant/Implant/{ImplantGUID}/Pass/iOS": {
      "get": {
        "tags": ["Implant"],
        "summary": "Geenerate an implant wallet pass for Apple for given implant by GUID",
        "parameters": [
          {
            "name": "ImplantGUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImplantCardApple"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/Implant/Implant/{ImplantGUID}/Pass/Android": {
      "get": {
        "tags": ["Implant"],
        "summary": "Geenerate an implant wallet pass for Apple for given implant by GUID",
        "parameters": [
          {
            "name": "ImplantGUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImplantCardAndroid"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/Message/GetAvailableChannels": {
      "get": {
        "tags": ["Message"],
        "summary": "Get resources that you can book appointsment from.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailableChannels"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/Message/GetPreviousMessages": {
      "get": {
        "tags": ["Message"],
        "summary": "Get Categories with options",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PreviousMessage"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/Message/SendMessage": {
      "post": {
        "tags": ["Message"],
        "summary": "Send message to Heilsugátt from patient",
        "requestBody": {
          "description": "Message to send",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New category added",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Invalid input detected",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/Message/GetCategories": {
      "get": {
        "tags": ["Message"],
        "summary": "Get Categories with options",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MessageCategory"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/Message/CanSendMessageBrjostamidstod": {
      "get": {
        "tags": ["Message"],
        "summary": "Check if patient can send message to Brjostamidstod",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BreastRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/Message/SendMessageBrjostamidstod": {
      "post": {
        "tags": ["Message"],
        "summary": "Create message from patient",
        "requestBody": {
          "description": "Message to send",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BreastRequestMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New category added",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Invalid input detected",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "User not able to add feedback. User not registered as patient"
          },
          "500": {
            "description": "Server error"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/Page/MyJourney": {
      "get": {
        "tags": ["Page"],
        "summary": "Get patient My page data",
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "enum": ["asc", "desc"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LshRootContainer"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/Page/GetOldJourneys": {
      "get": {
        "tags": ["Page"],
        "summary": "Get patient old Journey",
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "enum": ["asc", "desc"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LshRootContainer"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/Page/Discharge": {
      "get": {
        "tags": ["Page"],
        "summary": "Get patient Discharge info",
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "enum": ["asc", "desc"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LshRootContainer"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/Page/HealthInfo": {
      "get": {
        "tags": ["Page"],
        "summary": "Get patient health data",
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "enum": ["asc", "desc"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LshRootContainer"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/Page/PatientDocumentation": {
      "get": {
        "tags": ["Page"],
        "summary": "Get patient health data",
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "enum": ["asc", "desc"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LshRootContainer"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/Page/UserAgreement": {
      "get": {
        "tags": ["Page"],
        "summary": "Get user agreement",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/Page/PageInfo": {
      "post": {
        "tags": ["Page"],
        "summary": "Get single or multiple page header infos",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PageInfoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PageInfo"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/Page/HospitalStatistics": {
      "get": {
        "tags": ["Page"],
        "summary": "Get general statistics for hospital",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LshSubchapterContainer"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/Page/PatientNotifications": {
      "get": {
        "tags": ["PageNotifications"],
        "summary": "Get patient notifications",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LshGenericContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/PageNotifications/SetAsHidden": {
      "post": {
        "tags": ["PageNotifications"],
        "summary": "Get patient notifications",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HideNotificationRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HideNotificationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HideNotificationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HideNotificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/PatientProperties": {
      "get": {
        "tags": ["PatientProperties"],
        "summary": "Get information about current user",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatientProperties"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/PatientProperties/SetNotificationInfo": {
      "post": {
        "tags": ["PatientProperties"],
        "summary": "Post message from patient",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientNotificationIDInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/PatientProperties/ClearNotificationCount": {
      "post": {
        "tags": ["PatientProperties"],
        "summary": "Post message from patient",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientNotificationIDInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/PatientProperties/SetPreferedLanguage": {
      "post": {
        "tags": ["PatientProperties"],
        "summary": "Post message from patient",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LanguageInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/PatientProperties/SetPatientCodeValue": {
      "post": {
        "tags": ["PatientProperties"],
        "summary": "Save patient property",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeyValuePair"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/PatientProperties/GetContactList": {
      "get": {
        "tags": ["PatientProperties"],
        "summary": "Get patient contact list",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PatientContact"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/PatientProperties/UpsertContact": {
      "post": {
        "tags": ["PatientProperties"],
        "summary": "Create or Update patient contact list",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatientContact"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericStatusResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericStatusResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/PatientProperties/GetContactRoles": {
      "get": {
        "tags": ["PatientProperties"],
        "summary": "Get patient contact role list",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PatientContactRole"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/PatientProperties/GetTableReport": {
      "get": {
        "tags": ["PatientProperties"],
        "summary": "Get patient report",
        "parameters": [
          {
            "name": "ReportCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TableReport"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/PatientProperties/GetFormList": {
      "get": {
        "tags": ["PatientProperties"],
        "summary": "Get patient forms",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Form"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/PatientProperties/GetAnsweredFormList": {
      "get": {
        "tags": ["PatientProperties"],
        "summary": "Get answered patient forms",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Form"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/PatientProperties/SubmitFormAnswers": {
      "post": {
        "tags": ["PatientProperties"],
        "summary": "Submit answers to form",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FormAnswers"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/PatientProperties/HasDataForPatient": {
      "get": {
        "tags": ["PatientProperties"],
        "summary": "Get patient profile status within the app database",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericStatusResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/PatientProperties/eulaaccept": {
      "patch": {
        "tags": ["PatientProperties"],
        "summary": "Endpoint for user to accpet end user licence agreement",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/PatientProperties/SetItemStatusColor": {
      "post": {
        "tags": ["PatientProperties"],
        "summary": "Save patient property",
        "requestBody": {
          "description": "",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/KeyValuePair"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/PatientProperties/GetIceBioToken": {
      "get": {
        "tags": ["PatientProperties"],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IceBioResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericStatusResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/PatientProperties/SubmitWearablesData": {
      "post": {
        "tags": ["PatientProperties"],
        "summary": "Submit answers to form",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WearablesData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/PatientProperties/IsUserPermitted/{Key}": {
      "get": {
        "tags": ["PatientProperties"],
        "summary": "Check if user has permission to perform certain action",
        "parameters": [
          {
            "name": "Key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericIsPermittedResponseWM"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/RequestService/GetRequestServiceDepartments": {
      "get": {
        "tags": ["RequestService"],
        "summary": "Get departments which you patients can request service from",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RequestServiceDepartment"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/RequestService/SendServiceRequest": {
      "post": {
        "tags": ["RequestService"],
        "summary": "Send requests from patient to deparment asking for services",
        "parameters": [
          {
            "name": "inDepartmentID",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/Test": {
      "get": {
        "tags": ["Test"],
        "summary": "Get values for current authorization token",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/Timeline": {
      "get": {
        "tags": ["Timeline"],
        "summary": "GET: api/Timeline",
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "enum": [
                  "Appointment",
                  "Blood",
                  "Discharge",
                  "Operation",
                  "Others",
                  "URGENT_CARE",
                  "Virology",
                  "XRay"
                ],
                "type": "string",
                "description": "Enum for different types of items in timeline"
              }
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "enum": ["asc", "desc"],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LshGenericContainer"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/Timeline/{GUID}": {
      "get": {
        "tags": ["Timeline"],
        "summary": "GET: api/Timeline",
        "parameters": [
          {
            "name": "GUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LshGenericContainer"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    },
    "/api/v2/Timeline/{id}/FileViewed": {
      "post": {
        "tags": ["Timeline"],
        "summary": "Increment file view count",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "security": [
          {
            "IAS": ["IAS"]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Allergen": {
        "required": ["codes"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "presenceLevel": {
            "enum": ["PRESENT", "MAY_CONTAIN_TRACES"],
            "type": "string"
          },
          "codes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LookupCode"
            }
          }
        },
        "additionalProperties": false
      },
      "AppVersionInfo": {
        "type": "object",
        "properties": {
          "Version": {
            "type": "string",
            "description": "SemVer app version",
            "nullable": true
          },
          "DateRegistered": {
            "type": "string",
            "description": "Date version was registered",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppointmentDetails": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "description": "ID of resource appointment is booked for",
            "nullable": true
          },
          "DateTime": {
            "type": "string",
            "description": "Date and time of appointment",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AppointmentList": {
        "type": "object",
        "properties": {
          "Appointments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AppointmentDetails"
            },
            "description": "List of appointments",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AvailableChannels": {
        "type": "object",
        "properties": {
          "Channels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ChatChannel"
            },
            "description": "List of available channels",
            "nullable": true
          },
          "Count": {
            "type": "string",
            "description": "Count of returned resources",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "AvailableResources": {
        "type": "object",
        "properties": {
          "Resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Resource"
            },
            "description": "List of available resources",
            "nullable": true
          },
          "Count": {
            "type": "string",
            "description": "Count of returned resources",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BookAppointment": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "description": "ID of resources",
            "nullable": true
          },
          "Date": {
            "type": "string",
            "description": "Booking date on dd.MM.yyyy format",
            "nullable": true
          },
          "Time": {
            "type": "string",
            "description": "Booking time on hh:mm format",
            "nullable": true
          },
          "Message": {
            "type": "string",
            "description": "Message for booking to be sent into Saga",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BookAppointmentaResponse": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "string",
            "description": "Status response (0 or 500)",
            "nullable": true
          },
          "GUID": {
            "type": "string",
            "description": "GUID of new appointment item",
            "nullable": true
          },
          "Message": {
            "type": "string",
            "description": "Optional message",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "BreastRequestMessage": {
        "required": ["PhoneCountryCode"],
        "type": "object",
        "properties": {
          "PhoneCountryCode": {
            "minLength": 1,
            "type": "string",
            "description": "Dial code of number sent by patient"
          },
          "PhoneNumber": {
            "type": "string",
            "description": "Phone number sent by patient",
            "nullable": true
          },
          "Message": {
            "type": "string",
            "description": "Message from patient",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Message sent from patients to Brjostamidstod."
      },
      "BreastRequestResponse": {
        "type": "object",
        "properties": {
          "CanView": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "CancelAppointment": {
        "type": "object",
        "properties": {
          "GUID": {
            "type": "string",
            "description": "GUID of appointment to cancel",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ChatChannel": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "description": "ID of the chat channel",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Name of the chat channel",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Description of the chat channel",
            "nullable": true
          },
          "Department": {
            "$ref": "#/components/schemas/Department"
          }
        },
        "additionalProperties": false
      },
      "Course": {
        "required": [
          "ingredients",
          "knownAllergens",
          "media",
          "nutrients",
          "tags"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "optionName": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "order": {
            "type": "integer",
            "format": "int32"
          },
          "labelOfContents": {
            "type": "string",
            "nullable": true
          },
          "ingredients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Ingredient"
            }
          },
          "media": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Media"
            }
          },
          "knownAllergens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Allergen"
            }
          },
          "tags": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Tag"
            }
          },
          "nutrients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Nutrient"
            }
          },
          "prices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Price"
            },
            "nullable": true
          },
          "co2Equivalents": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DateValuePair": {
        "type": "object",
        "properties": {
          "DateTime": {
            "type": "string",
            "nullable": true
          },
          "Value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DaysWithOpenSchedule": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "description": "ID of resources",
            "nullable": true
          },
          "DaysWithSchedule": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Days which resource has a valid schedule for booking appointments",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Department": {
        "type": "object",
        "properties": {
          "DepartmentName": {
            "type": "string",
            "description": "ID of the chat channel",
            "nullable": true
          },
          "DepartmentLocation": {
            "type": "string",
            "description": "Physical location of the department",
            "nullable": true
          },
          "DepartmentPhoneNumber": {
            "type": "string",
            "description": "Public phone number of the department",
            "nullable": true
          },
          "DepartmentEmail": {
            "type": "string",
            "description": "Public email of the department",
            "nullable": true
          },
          "DepartmentURL": {
            "type": "string",
            "description": "URl for the department on the public Landspítali webiste",
            "nullable": true
          },
          "DepartmentFooter": {
            "type": "string",
            "description": "Footer text for the department",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EditAppointment": {
        "type": "object",
        "properties": {
          "GUID": {
            "type": "string",
            "description": "GUID of appointment to edit",
            "nullable": true
          },
          "Date": {
            "type": "string",
            "description": "New booking date on dd.MM.yyyy format",
            "nullable": true
          },
          "Time": {
            "type": "string",
            "description": "New booking time on hh:mm format",
            "nullable": true
          },
          "Message": {
            "type": "string",
            "description": "Message for updated booking to be sent into Saga",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Form": {
        "required": ["FormJSON", "ValidFromDateTime", "ValidToDateTime"],
        "type": "object",
        "properties": {
          "FormJSON": {
            "minLength": 1,
            "type": "string",
            "description": "JSON structure with form"
          },
          "Caption": {
            "maxLength": 1000,
            "type": "string",
            "description": "Caption for the form",
            "nullable": true
          },
          "Description": {
            "maxLength": 4000,
            "type": "string",
            "description": "Description for the form",
            "nullable": true
          },
          "GUID": {
            "maxLength": 50,
            "type": "string",
            "description": "GUID used for tracking this form",
            "nullable": true
          },
          "ValidToDateTime": {
            "minLength": 1,
            "type": "string",
            "description": "Patient has until this time to answer form",
            "format": "date-time"
          },
          "ValidFromDateTime": {
            "minLength": 1,
            "type": "string",
            "description": "Patient has from this datetime to answer form",
            "format": "date-time"
          },
          "AnswerDateTime": {
            "type": "string",
            "description": "Patient has from this datetime to answer form",
            "format": "date-time",
            "nullable": true
          },
          "Location": {
            "maxLength": 400,
            "type": "string",
            "description": "Department/Location of sender",
            "nullable": true
          },
          "AnswersJSON": {
            "type": "string",
            "description": "Previous answers if form has been submitted",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Class containing information about HG forms questions"
      },
      "FormAnswers": {
        "required": ["FormGUID", "AnswersJSON"],
        "type": "object",
        "properties": {
          "FormGUID": {
            "minLength": 1,
            "type": "string",
            "description": "GUID used for tracking this form"
          },
          "AnswersJSON": {
            "minLength": 1,
            "type": "string",
            "description": "JSON structure with answers to form"
          }
        },
        "additionalProperties": false,
        "description": "Class containing answers to HG form"
      },
      "GenericIsPermittedResponse": {
        "type": "object",
        "properties": {
          "IsPermitted": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "GenericIsPermittedResponseWM": {
        "type": "object",
        "properties": {
          "IsPermitted": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "GenericStatusResponse": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "string",
            "description": "Status",
            "nullable": true
          },
          "Message": {
            "type": "string",
            "description": "Message",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HideNotificationRequest": {
        "required": ["NotificationGUID"],
        "type": "object",
        "properties": {
          "NotificationGUID": {
            "maxLength": 36,
            "minLength": 1,
            "type": "string",
            "description": "GUID for notification that user wants to hide",
            "example": "c5172198-6937-4277-89d1-e0ffcf88c41a"
          }
        },
        "additionalProperties": false,
        "description": "Hide a notification for patient based on GUID"
      },
      "IceBioResponse": {
        "type": "object",
        "properties": {
          "opening_page": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Implant": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Name of implant",
            "nullable": true
          },
          "Icon": {
            "type": "string",
            "description": "Icon for specific implant in the app",
            "nullable": true
          },
          "GUID": {
            "type": "string",
            "description": "Unique GUID for this transplant on the DMZ",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImplantCardAndroid": {
        "type": "object",
        "properties": {
          "GUID": {
            "type": "string",
            "description": "Unique GUID for this transplant on the DMZ",
            "nullable": true
          },
          "PassURL": {
            "type": "string",
            "description": "URL for Google Wallet Pass",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImplantCardApple": {
        "type": "object",
        "properties": {
          "GUID": {
            "type": "string",
            "description": "Unique GUID for this transplant on the DMZ",
            "nullable": true
          },
          "PassBase64Encoded": {
            "type": "string",
            "description": "Base64 encoded pkpass for the implant card (binary data)",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ImplantWalletPass": {
        "type": "object",
        "properties": {
          "PatientName": {
            "type": "string",
            "description": "Name of patient",
            "nullable": true
          },
          "PatientSSN": {
            "type": "string",
            "description": "SSN of patient",
            "nullable": true
          },
          "OperationDate": {
            "type": "string",
            "description": "Date of operation for given implant",
            "nullable": true
          },
          "DoctorName": {
            "type": "string",
            "description": "Name of the responsible doctor for the operation",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Name of implant",
            "nullable": true
          },
          "Icon": {
            "type": "string",
            "description": "Icon for specific implant in the app",
            "nullable": true
          },
          "TypeNumber": {
            "type": "string",
            "description": "Number/ID that defines the implant, as provided by producer of the implant",
            "nullable": true
          },
          "BatchNumber": {
            "type": "string",
            "description": "Batch number for the implant",
            "nullable": true
          },
          "SerialNumber": {
            "type": "string",
            "description": "Unique serial number for the implant",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Description of the implant, provided by producer",
            "nullable": true
          },
          "Producer": {
            "type": "string",
            "description": "Producer of implant",
            "nullable": true
          },
          "ProducerAddress": {
            "type": "string",
            "description": "Address (street, number, zip, country) of producer",
            "nullable": true
          },
          "ProducerURL": {
            "type": "string",
            "description": "URL of producer",
            "nullable": true
          },
          "InsitituteInfo": {
            "type": "string",
            "description": "Information about the institute the operation was fperformed at",
            "nullable": true
          },
          "InsititutePhoneNumber": {
            "type": "string",
            "description": "Phone number of the institute the operation was performed at",
            "nullable": true
          },
          "GUID": {
            "type": "string",
            "description": "Unique GUID for this transplant on the DMZ",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Ingredient": {
        "required": ["codes"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "codes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LookupCode"
            }
          }
        },
        "additionalProperties": false
      },
      "KeyValuePair": {
        "type": "object",
        "properties": {
          "Key": {
            "type": "string",
            "nullable": true
          },
          "Value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LanguageInfo": {
        "required": ["LanguageID", "LanguageName"],
        "type": "object",
        "properties": {
          "LanguageID": {
            "maxLength": 400,
            "minLength": 1,
            "type": "string",
            "description": "ID of prefered language"
          },
          "LanguageName": {
            "maxLength": 4000,
            "minLength": 1,
            "type": "string",
            "description": "Prefered language name"
          }
        },
        "additionalProperties": false,
        "description": "Language class"
      },
      "LookupCode": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LshGenericChapter": {
        "type": "object",
        "properties": {
          "Caption": {
            "type": "string",
            "nullable": true
          },
          "Items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LshGenericContainer"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LshGenericContainer": {
        "type": "object",
        "properties": {
          "Caption": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "Value": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "DateTime": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "Order": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "IconStyle": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "Header": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "RegistrationDatetime": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "OuterLink": {
            "type": "string",
            "description": "",
            "nullable": true
          },
          "QRCode": {
            "type": "string",
            "description": "QR code",
            "nullable": true
          },
          "GPSPoint": {
            "type": "string",
            "description": "GPS Point",
            "nullable": true
          },
          "DepartmentPhone": {
            "type": "string",
            "description": "Phone for department",
            "nullable": true
          },
          "DepartmentName": {
            "type": "string",
            "description": "Name of department",
            "nullable": true
          },
          "DepartmentDescription": {
            "type": "string",
            "description": "Department Description",
            "nullable": true
          },
          "DepartmentPictureLink": {
            "type": "string",
            "description": "Link to picture of department location",
            "nullable": true
          },
          "StatusText": {
            "type": "string",
            "description": "Satus text",
            "nullable": true
          },
          "StatusColor": {
            "type": "string",
            "description": "Color of status",
            "nullable": true
          },
          "GUID": {
            "type": "string",
            "description": "Globally unique identifier",
            "nullable": true
          },
          "UpdateCode": {
            "type": "string",
            "description": "Update code.  If not empty this value is editable.  send this code with update of field",
            "nullable": true
          },
          "UpdateType": {
            "type": "string",
            "description": "The datatype for the field: NUMBER, PHONE, TEXT, EMAIL",
            "nullable": true
          },
          "UpdateUnit": {
            "type": "string",
            "description": "Unit for the field for example \"kg\" and \"cm\"",
            "nullable": true
          },
          "ReportCode": {
            "type": "string",
            "description": "if this is not empty use this code to get report data",
            "nullable": true
          },
          "FileData": {
            "type": "string",
            "description": "Base64 encoded file data",
            "nullable": true
          },
          "FileType": {
            "type": "string",
            "description": "File type of FileData.  ie. pdf, png, jpg, html etc.",
            "nullable": true
          },
          "ReferenceID": {
            "type": "string",
            "description": "GUID of item referenced",
            "nullable": true
          },
          "ReferenceType": {
            "type": "string",
            "description": "Type of item referenced, either \"Items\" or \"Form\"",
            "nullable": true
          },
          "ReferencePageName": {
            "type": "string",
            "description": "Name of the page of the referenced item",
            "nullable": true
          },
          "ReferencePageTitle": {
            "type": "string",
            "description": "Title of page of the referenced item",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Generic information placeholder"
      },
      "LshRootContainer": {
        "type": "object",
        "properties": {
          "Chapters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LshGenericChapter"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LshSubchapter": {
        "type": "object",
        "properties": {
          "Caption": {
            "type": "string",
            "nullable": true
          },
          "Subchapters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LshGenericChapter"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "LshSubchapterContainer": {
        "type": "object",
        "properties": {
          "Chapters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LshSubchapter"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Meal": {
        "type": "object",
        "properties": {
          "Title": {
            "type": "string",
            "nullable": true
          },
          "Courses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Course"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MealPlan": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "nullable": true
          },
          "ShortName": {
            "type": "string",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "Meals": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Meal"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Media": {
        "type": "object",
        "properties": {
          "src": {
            "type": "string",
            "nullable": true
          },
          "mimeType": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Menu": {
        "type": "object",
        "properties": {
          "IsOnSpecialDiet": {
            "type": "boolean"
          },
          "Categories": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MealPlan"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MessageCategory": {
        "type": "object",
        "properties": {
          "Options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MessageOption"
            },
            "description": "List of message options",
            "nullable": true
          },
          "Header": {
            "type": "string",
            "description": "Header of the category",
            "nullable": true
          },
          "CategoryKey": {
            "type": "string",
            "description": "ID of category",
            "nullable": true
          },
          "Order": {
            "type": "integer",
            "description": "Order of category",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "MessageOption": {
        "type": "object",
        "properties": {
          "Caption": {
            "type": "string",
            "description": "Caption of message",
            "nullable": true
          },
          "Value": {
            "type": "string",
            "description": "Text body of message",
            "nullable": true
          },
          "Order": {
            "type": "integer",
            "description": "Order of Option",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "Nutrient": {
        "required": ["codes"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "double"
          },
          "unit": {
            "type": "string",
            "nullable": true
          },
          "codes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LookupCode"
            }
          }
        },
        "additionalProperties": false
      },
      "OpenTimeSlots": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "description": "ID of resources",
            "nullable": true
          },
          "Date": {
            "type": "string",
            "description": "Day which the resource has a valid schedule for booking appointments",
            "nullable": true
          },
          "TimeSlots": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TimeSlots"
            },
            "description": "Available time slots for the given day",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Operation": {
        "type": "object",
        "properties": {
          "OperationID": {
            "type": "string",
            "description": "Internal ID of the operation from Orbit system",
            "nullable": true
          },
          "Title": {
            "type": "string",
            "description": "Title of performed operation",
            "nullable": true
          },
          "DateTime": {
            "type": "string",
            "description": "Date and time on which the operation was performed",
            "nullable": true
          },
          "DoctorName": {
            "type": "string",
            "description": "Name of responsible doctor for this operation according to Orbit",
            "nullable": true
          },
          "InstitutionName": {
            "type": "string",
            "description": "Institution at which the operation was performed",
            "nullable": true
          },
          "InstitutionPhoneNumber": {
            "type": "string",
            "description": "Phone number of the institution the operation was performed at",
            "nullable": true
          },
          "GUID": {
            "type": "string",
            "description": "Unique GUID for this operation on the DMZ",
            "nullable": true
          },
          "ImplantCount": {
            "type": "integer",
            "description": "Amount of implants connected to the operation",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PageInfo": {
        "required": ["PageName"],
        "type": "object",
        "properties": {
          "PageName": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string",
            "description": "Page name"
          },
          "Info": {
            "maxLength": 4000,
            "type": "string",
            "description": "Info for the header of that page",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Basic information about display page"
      },
      "PageInfoRequest": {
        "required": ["PageName"],
        "type": "object",
        "properties": {
          "PageName": {
            "minLength": 1,
            "type": "string",
            "description": "Page name"
          }
        },
        "additionalProperties": false,
        "description": "Authentication information object"
      },
      "PatientContact": {
        "required": ["Name"],
        "type": "object",
        "properties": {
          "LineNumber": {
            "type": "integer",
            "description": "Line number of contact.  Use to update.  Sent null when adding contact",
            "format": "int32",
            "nullable": true
          },
          "Name": {
            "minLength": 1,
            "type": "string",
            "description": "Name of the contact"
          },
          "Role": {
            "type": "integer",
            "description": "id of the role",
            "format": "int32"
          },
          "MobilePhoneCountryCode": {
            "type": "string",
            "description": "Mobile phone country code",
            "nullable": true
          },
          "MobilePhoneNumber": {
            "type": "string",
            "description": "Mobile phone number",
            "nullable": true
          },
          "WorkPhoneCountryCode": {
            "type": "string",
            "description": "Work phone country code",
            "nullable": true
          },
          "WorkPhoneNumber": {
            "type": "string",
            "description": "Work phone number",
            "nullable": true
          },
          "HomePhoneCountryCode": {
            "type": "string",
            "description": "Home phone country code",
            "nullable": true
          },
          "HomePhoneNumber": {
            "type": "string",
            "description": "Home phone number",
            "nullable": true
          },
          "ContactSSN": {
            "maxLength": 10,
            "type": "string",
            "description": "Kennitala",
            "nullable": true
          },
          "IsPrimary": {
            "type": "integer",
            "description": "Sets as primary contact when = 1 else 0",
            "format": "int32"
          },
          "IsActive": {
            "type": "integer",
            "description": "is this an active registration\r\nset = 1 when active else 0",
            "format": "int32"
          },
          "ReceiveOperationStatusNotifications": {
            "type": "integer",
            "description": "will this contact receive notifications about status of operation\r\nset = 1 when active else 0",
            "format": "int32"
          },
          "CanGiveInfo": {
            "type": "integer",
            "description": "Contact can give information when = 1 else 0",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PatientContactRole": {
        "type": "object",
        "properties": {
          "RoleID": {
            "type": "integer",
            "description": "ID for the role",
            "format": "int32"
          },
          "Description": {
            "type": "string",
            "description": "Display text for the role",
            "nullable": true
          },
          "OrderNo": {
            "type": "integer",
            "description": "What order item should be presented in",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "PatientFeedback": {
        "type": "object",
        "properties": {
          "Caption": {
            "maxLength": 200,
            "type": "string",
            "description": "Caption of feedback",
            "nullable": true
          },
          "Text": {
            "type": "string",
            "description": "User information",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Feedback to LSH"
      },
      "PatientNotificationIDInfo": {
        "type": "object",
        "properties": {
          "OS": {
            "type": "string",
            "nullable": true
          },
          "NotificationID": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PatientProperties": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string",
            "description": "Patient name",
            "nullable": true
          },
          "Location": {
            "type": "string",
            "description": "LSH location",
            "nullable": true
          },
          "CanSendMessage": {
            "type": "integer",
            "description": "Can user send Message",
            "format": "int32"
          },
          "FoodType": {
            "type": "string",
            "description": "Type of food patient has orders for",
            "nullable": true
          },
          "Language": {
            "$ref": "#/components/schemas/LanguageInfo"
          },
          "IconStyle": {
            "type": "string",
            "description": "Icon style",
            "nullable": true
          },
          "IconTitle": {
            "type": "string",
            "description": "Icon title",
            "nullable": true
          },
          "NewUser": {
            "type": "string",
            "description": "New user",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "General information about patient"
      },
      "PreviousMessage": {
        "type": "object",
        "properties": {
          "Caption": {
            "type": "string",
            "description": "Chat message caption",
            "nullable": true
          },
          "Message": {
            "type": "string",
            "description": "Chat message sent by patient",
            "nullable": true
          },
          "Reply": {
            "type": "string",
            "description": "Reply to message from Heilsugátt, if any",
            "nullable": true
          },
          "SentDateTime": {
            "type": "string",
            "description": "DateTime when patient sent message",
            "nullable": true
          },
          "ReplyDateTime": {
            "type": "string",
            "description": "DateTime when reply was receieved from Heilsugátt",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Price": {
        "required": ["name", "value"],
        "type": "object",
        "properties": {
          "name": {
            "minLength": 1,
            "type": "string"
          },
          "value": {
            "type": "number",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RequestServiceDepartment": {
        "type": "object",
        "properties": {
          "DepartmentID": {
            "type": "string",
            "description": "ID of the Department",
            "nullable": true
          },
          "DepartmentName": {
            "type": "string",
            "description": "Name of the department",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Resource": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "description": "ID of the resource",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Name of the resources",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Description of the resources",
            "nullable": true
          },
          "CalendarDate": {
            "type": "string",
            "description": "Date which should be selected by default in the calendar",
            "nullable": true
          },
          "AvailableFromDate": {
            "type": "string",
            "description": "Patient is available to book appointments from this date",
            "nullable": true
          },
          "AvailableToDate": {
            "type": "string",
            "description": "Patient is available to book appointments to this date",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SendMessage": {
        "required": ["ID", "Message"],
        "type": "object",
        "properties": {
          "ID": {
            "minLength": 1,
            "type": "string",
            "description": "ID of chatChannel being messaged"
          },
          "Message": {
            "maxLength": 1000,
            "minLength": 1,
            "type": "string",
            "description": "Message from patient"
          }
        },
        "additionalProperties": false
      },
      "TableReport": {
        "type": "object",
        "properties": {
          "TableData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TableReportDataItem"
            },
            "description": "Table data.  Key/Value",
            "nullable": true
          },
          "Header": {
            "type": "string",
            "description": "Report header",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "description": "Report description",
            "nullable": true
          },
          "ReportCode": {
            "type": "string",
            "description": "Code for report",
            "nullable": true
          },
          "AggregationType": {
            "type": "string",
            "description": "Type of  aggregation (none, over 24 hours, over 1 week, etc)s",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Report that includes table data"
      },
      "TableReportDataItem": {
        "type": "object",
        "properties": {
          "Key": {
            "type": "string",
            "description": "Key",
            "nullable": true
          },
          "KeyType": {
            "type": "string",
            "description": "Key type: DATE, NUMBER, STRING",
            "nullable": true
          },
          "Value": {
            "type": "string",
            "description": "Value",
            "nullable": true
          },
          "ValueType": {
            "type": "string",
            "description": "Value type: DATE, NUMBER, STRING",
            "nullable": true
          },
          "Series": {
            "type": "string",
            "description": "Series, string",
            "nullable": true
          },
          "Unit": {
            "type": "string",
            "description": "Unit, string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Key/Value data"
      },
      "Tag": {
        "required": ["codes"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "codes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LookupCode"
            }
          },
          "media": {
            "$ref": "#/components/schemas/Media"
          }
        },
        "additionalProperties": false
      },
      "TimeSlots": {
        "type": "object",
        "properties": {
          "Time": {
            "type": "string",
            "description": "Time of slot on hh:MM format",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WearablesData": {
        "type": "object",
        "properties": {
          "Key": {
            "type": "string",
            "nullable": true
          },
          "DateValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DateValuePair"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "IAS": {
        "type": "oauth2",
        "description": "island.is OpenId Security Scheme",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://identity-server.staging01.devland.is/connect/authorize?prompt=select_account",
            "tokenUrl": "https://identity-server.staging01.devland.is/connect/token",
            "scopes": {
              "openid": "This is the only mandatory scope and will return a sub claim which represents a unique identifier for the authenticated user.",
              "profile": "This scope value requests access to the End-User’s default profile Claims, which are",
              "@landspitali.is/app:write": "Get user nationalid in access token, required for patient App",
              "@landspitali.is/sjukraskrar:read": "Get user nationalid in access token, required for patient App"
            }
          }
        }
      }
    }
  }
}
