name: Deploy

on:
  workflow_call:

jobs:
  deploy:
    runs-on: arc-shared
    if: ${{ !cancelled() }}
    needs:
      - prepare
      - tests
      - docker-build
    steps:
      - name: Get docker-build output
        uses: cloudposse/github-action-matrix-outputs-read@v1
        id: read
        with:
          matrix-step-name: docker-build
      - name: checkout
        if: ${{ needs.prepare.outputs.MQ_SHOULD_RUN_BUILD == 'true' && needs.prepare.outputs.DOCKER_CHUNKS && needs.prepare.outputs.DOCKER_CHUNKS != '[]' }}
        uses: actions/checkout@v4

      - name: Setup yarn
        uses: ./.github/actions/setup-yarn
        if: ${{ needs.prepare.outputs.MQ_SHOULD_RUN_BUILD == 'true' && needs.prepare.outputs.DOCKER_CHUNKS && needs.prepare.outputs.DOCKER_CHUNKS != '[]' }}
        with:
          RUNS_ON_S3_BUCKET_CACHE: ${{ vars.RUNS_ON_S3_BUCKET_CACHE }}

      - name: load-deps
        uses: ./.github/actions/load-deps
        if: ${{ needs.prepare.outputs.MQ_SHOULD_RUN_BUILD == 'true' && needs.prepare.outputs.DOCKER_CHUNKS && needs.prepare.outputs.DOCKER_CHUNKS != '[]' }}
      - name: Prepare artifact to be uploaded
        if: ${{ needs.prepare.outputs.MQ_SHOULD_RUN_BUILD == 'true' && needs.prepare.outputs.DOCKER_CHUNKS && needs.prepare.outputs.DOCKER_CHUNKS != '[]' }}
        env:
          JSON_DATA: ${{ steps.read.outputs.result }}
        run: |
          node scripts/ci/docker/write-data.mjs
      - name: Get manifest data
        id: manifest
        if: ${{ needs.prepare.outputs.MQ_SHOULD_RUN_BUILD == 'true' && needs.prepare.outputs.DOCKER_CHUNKS && needs.prepare.outputs.DOCKER_CHUNKS != '[]' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          node scripts/ci/docker/bootstrap.mjs
          node scripts/ci/docker/get-data.mjs
      - name: Update helm-values repository
        uses: ./.github/actions/update-helm-values
        if: ${{ steps.manifest.outputs.MQ_HAS_OUTPUT == 'true' && needs.prepare.outputs.MQ_SHOULD_RUN_BUILD == 'true' && needs.prepare.outputs.DOCKER_CHUNKS && needs.prepare.outputs.DOCKER_CHUNKS != '[]' }}
        with:
          files: ${{ steps.manifest.outputs.MQ_CHANGED_FILES }}
          ssh-key: ${{ secrets.HELM_VALUES_SSH_KEY }}
          app-id: ${{ secrets.HELM_VALUES_APP_ID }}
          branch: ${{ needs.prepare.outputs.MQ_HELM_VALUES_BRANCH }}
          commit-msg: ${{ steps.manifest.outputs.MQ_COMMIT_MSG }}
      - name: Update judicial system
        id: judicial-system
        if: ${{ github.event.merge_group.base_ref == 'refs/heads/main' && needs.prepare.outputs.DOCKER_CHUNKS && needs.prepare.outputs.DOCKER_CHUNKS != '[]'  }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SHOULD_DEPLOY_JUDICIAL: true
        run: |
          node scripts/ci/docker/get-data.mjs --deploy-judicial
      - name: Update helm-values repository with judicial system DEV
        uses: ./.github/actions/update-helm-values
        if: ${{ steps.judicial-system.outputs.MQ_HAS_OUTPUT == 'true' }}
        with:
          files: ${{ steps.judicial-system.outputs.MQ_JUDICIAL_DEV }}
          ssh-key: ${{ secrets.HELM_VALUES_SSH_KEY }}
          app-id: ${{ secrets.HELM_VALUES_APP_ID }}
          commit-msg: ${{ steps.judicial-system.outputs.MQ_COMMIT_MSG }}
          branch: main

      - name: Update helm-values repository with judicial system PROD
        uses: ./.github/actions/update-helm-values
        if: ${{ steps.judicial-system.outputs.MQ_HAS_OUTPUT == 'true' }}
        with:
          files: ${{ steps.judicial-system.outputs.MQ_JUDICIAL_PROD }}
          ssh-key: ${{ secrets.HELM_VALUES_SSH_KEY }}
          app-id: ${{ secrets.HELM_VALUES_APP_ID }}
          commit-msg: ${{ steps.judicial-system.outputs.MQ_COMMIT_MSG }}
          branch: release
