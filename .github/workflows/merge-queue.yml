name: Validate code in the merge queue (post merge)

on:
  workflow_dispatch: {}
  merge_group:

defaults:
  run:
    shell: bash -euxo pipefail {0}

concurrency:
  group: merge-queue-post-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  ACTIONS_STEP_DEBUG: 'true'
  DOCKER_REGISTRY: 821090935708.dkr.ecr.eu-west-1.amazonaws.com
  DOCKER_BASE_IMAGE_REGISTRY: 821090935708.dkr.ecr.eu-west-1.amazonaws.com/ecr-public
  SPINNAKER_URL: https://spinnaker-gate.shared.devland.is
  COMPOSE_HTTP_TIMEOUT: 180
  GITHUB_ACTIONS_CACHE_URL: https://cache.dev01.devland.is/
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  NX_TASKS_RUNNER: ci
  CONFIGCAT_MAIN_CONFIG_ID: 08d8c761-021c-46f0-8671-6244663a372f
  CONFIGCAT_MOBILE_APP_CONFIG_ID: 08daf234-7573-4b3b-85f6-189fc7502542
  DISABLE_CHUNKS: 'false'
  DISABLE_GROUPING: 'false'
  DISABLE_PROBLEMATIC: 'false'
  CHUNK_SIZE: '3'
  MAX_JOBS: '2'
  NX_PARALLEL: '2'
  NX_MAX_PARALLEL: '4'
  NODE_IMAGE_VERSION: 20
  RUNS_ON_BUCKET_NAME: ${{ vars.RUNS_ON_BUCKET_NAME }}
  AWS_REGION: eu-west-1
  AFFECTED_ALL: ${{ secrets.AFFECTED_ALL }}
  SERVERSIDE_FEATURES_ON: ''
  GENERATED_FILES: ${{ github.sha }}.tar.gz
  YARN_ENABLE_HARDENED_MODE: '0'

jobs:
  pre-checks:
    uses: ./.github/workflows/pre-checks.yml
    secrets: inherit

  prepare:
    uses: ./.github/workflows/install.yml
    secrets: inherit
    with:
      run_merge_queue: true
      force_all_to_be_affected: ${{ github.event_name == 'workflow_dispatch' }}
      main_branch: ${{ github.event.merge_group.base_ref || github.ref_name }}
    needs:
      - pre-checks

  docker-build:
    needs:
      - prepare
      - pre-checks
    if: ${{ needs.prepare.outputs.MQ_SHOULD_RUN_BUILD == 'true' && needs.prepare.outputs.DOCKER_CHUNKS }}
    permissions:
      actions: read
      contents: read
    strategy:
      fail-fast: false
      matrix:
        chunk: ${{ fromJson(needs.prepare.outputs.DOCKER_CHUNKS) }}
    uses: ./.github/workflows/docker.yml
    secrets: inherit
    with:
      docker_tag: ${{ needs.prepare.outputs.MQ_DOCKER_TAG}}
      project: ${{ fromJSON(matrix.chunk).projects }}

  tests:
    needs:
      - prepare
    if: ${{ needs.prepare.outputs.TEST_CHUNKS && needs.prepare.outputs.DEPLOY_FEATURE == 'false' }}
    runs-on: arc-shared
    timeout-minutes: 45
    env:
      AFFECTED_PROJECTS: ${{ matrix.projects }}
      NX_BASE: ${{ needs.prepare.outputs.NX_BASE }}
      NX_HEAD: ${{ needs.prepare.outputs.NX_HEAD }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.prepare.outputs.TEST_CHUNKS) }}
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Setup yarn
        uses: ./.github/actions/setup-yarn

      - name: load-deps
        uses: ./.github/actions/load-deps

      - name: Run unit tests
        uses: ./.github/actions/unit-test
        with:
          dd-api-key: '${{ secrets.DD_API_KEY }}'
          codecov-token: ${{ secrets.CODECOV_TOKEN }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          docker-registry: 821090935708.dkr.ecr.eu-west-1.amazonaws.com/

  success:
    runs-on: arc-shared
    if: ${{ !cancelled() }}
    needs:
      - prepare
      - tests
      - docker-build
    steps:
      - name: Check prepare success
        run: '[[ ${{ needs.prepare.result }} == "success" ]] || exit 1'
      - name: Check tests success
        run: '[[ ${{ needs.tests.result }} != "failure" && ${{ needs.tests.result }} != "abandoned" && ${{ needs.tests.result }} != "cancelled" ]] || exit 1'
      - name: Check build success
        run: '[[ ${{ needs.docker-build.result }} != "failure" && ${{ needs.docker-build.result }} != "abandoned" && ${{ needs.docker-build.result }} != "cancelled" ]] || exit 1'
      - name: Get docker-build output
        uses: cloudposse/github-action-matrix-outputs-read@v1
        id: read
        with:
          matrix-step-name: docker-build
      - name: checkout
        if: ${{ needs.prepare.outputs.MQ_SHOULD_RUN_BUILD == 'true' && needs.prepare.outputs.DOCKER_CHUNKS && needs.prepare.outputs.DOCKER_CHUNKS != '[]' }}
        uses: actions/checkout@v4

      - name: Setup yarn
        uses: ./.github/actions/setup-yarn
        if: ${{ needs.prepare.outputs.MQ_SHOULD_RUN_BUILD == 'true' && needs.prepare.outputs.DOCKER_CHUNKS && needs.prepare.outputs.DOCKER_CHUNKS != '[]' }}

      - name: load-deps
        uses: ./.github/actions/load-deps
        if: ${{ needs.prepare.outputs.MQ_SHOULD_RUN_BUILD == 'true' && needs.prepare.outputs.DOCKER_CHUNKS && needs.prepare.outputs.DOCKER_CHUNKS != '[]' }}
      - name: Prepare artifact to be uploaded
        if: ${{ needs.prepare.outputs.MQ_SHOULD_RUN_BUILD == 'true' && needs.prepare.outputs.DOCKER_CHUNKS && needs.prepare.outputs.DOCKER_CHUNKS != '[]' }}
        env:
          JSON_DATA: ${{ steps.read.outputs.result }}
        run: |
          node scripts/ci/docker/write-data.mjs
      - name: Get manifest data
        id: manifest
        if: ${{ needs.prepare.outputs.MQ_SHOULD_RUN_BUILD == 'true' && needs.prepare.outputs.DOCKER_CHUNKS && needs.prepare.outputs.DOCKER_CHUNKS != '[]' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          node scripts/ci/docker/bootstrap.mjs
          node scripts/ci/docker/get-data.mjs
      - name: Update helm-values repository
        uses: ./.github/actions/update-helm-values
        if: ${{ steps.manifest.outputs.MQ_HAS_OUTPUT == 'true' && needs.prepare.outputs.MQ_SHOULD_RUN_BUILD == 'true' && needs.prepare.outputs.DOCKER_CHUNKS && needs.prepare.outputs.DOCKER_CHUNKS != '[]' }}
        with:
          files: ${{ steps.manifest.outputs.MQ_CHANGED_FILES }}
          ssh-key: ${{ secrets.HELM_VALUES_SSH_KEY }}
          app-id: ${{ secrets.HELM_VALUES_APP_ID }}
          branch: ${{ needs.prepare.outputs.MQ_HELM_VALUES_BRANCH }}
          commit-msg: ${{ steps.manifest.outputs.MQ_COMMIT_MSG }}
      - name: Update judicial system
        id: judicial-system
        if: ${{ github.event.merge_group.base_ref == 'refs/heads/main' && needs.prepare.outputs.DOCKER_CHUNKS && needs.prepare.outputs.DOCKER_CHUNKS != '[]'  }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SHOULD_DEPLOY_JUDICIAL: true
        run: |
          node scripts/ci/docker/get-data.mjs --deploy-judicial
      - name: Update helm-values repository with judicial system DEV
        uses: ./.github/actions/update-helm-values
        if: ${{ steps.judicial-system.outputs.MQ_HAS_OUTPUT == 'true' }}
        with:
          files: ${{ steps.judicial-system.outputs.MQ_JUDICIAL_DEV }}
          ssh-key: ${{ secrets.HELM_VALUES_SSH_KEY }}
          app-id: ${{ secrets.HELM_VALUES_APP_ID }}
          commit-msg: ${{ steps.judicial-system.outputs.MQ_COMMIT_MSG }}
          branch: main

      - name: Update helm-values repository with judicial system PROD
        uses: ./.github/actions/update-helm-values
        if: ${{ steps.judicial-system.outputs.MQ_HAS_OUTPUT == 'true' }}
        with:
          files: ${{ steps.judicial-system.outputs.MQ_JUDICIAL_PROD }}
          ssh-key: ${{ secrets.HELM_VALUES_SSH_KEY }}
          app-id: ${{ secrets.HELM_VALUES_APP_ID }}
          commit-msg: ${{ steps.judicial-system.outputs.MQ_COMMIT_MSG }}
          branch: release

  # Remove this as a required status check and switch to something more meaningful
  codeowners-check:
    name: Lint CODEOWNERS
    runs-on: arc-shared
    env:
      CHECK: 'false'
    steps:
      - name: Codeowners validation
        run: |
          exit 0
