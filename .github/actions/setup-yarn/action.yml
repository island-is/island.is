name: 'Setup yarn'
description: 'Yarn setup and install dependencies'
inputs:
  RUNS_ON_S3_BUCKET_CACHE:
    description: ''
    required: true
  working-directory:
    description: 'Directory to run the action in'
    required: false
    default: '.'

runs:
  using: 'composite'
  steps:
    - name: Corepack
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: corepack enable

    - name: Check node version
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      run: |
        set -euo pipefail
        node -v
        yarn --version
        ls -l "$(which node)"

    - name: Set cache key
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      id: set-cache-key
      run: |
        echo "CACHE_KEY=${{ runner.os }}-deps-root-${{ hashFiles('yarn.lock') }}-1" >> $GITHUB_OUTPUT
        echo "CACHE_KEY_INFRA=${{ runner.os }}-deps-infra-${{ hashFiles('infra/yarn.lock') }}-1" >> $GITHUB_OUTPUT

    - name: Get Yarn Cache Directory Path (root)
      id: yarn-cache-dir-path
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

    - name: Get Yarn Cache Directory Path (infra)
      id: yarn-cache-dir-path-infra
      working-directory: ./infra
      shell: bash
      run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

    - name: Restore Dependencies Cache (root)
      uses: actions/cache/restore@v4
      id: restore-cache-root
      with:
        path: |
          ${{ steps.yarn-cache-dir-path.outputs.dir }}
          ${{ env.CYPRESS_CACHE_FOLDER }}
        key: ${{ steps.set-cache-key.outputs.CACHE_KEY }}
      env:
        RUNS_ON_S3_BUCKET_CACHE: ${{ inputs.RUNS_ON_S3_BUCKET_CACHE }}
        CYPRESS_CACHE_FOLDER: ${{ github.workspace }}/.cypress-cache

    - name: Restore Dependencies Cache (infra)
      uses: actions/cache/restore@v4
      id: restore-cache-infra
      with:
        path: ${{ steps.yarn-cache-dir-path-infra.outputs.dir }}
        key: ${{ steps.set-cache-key.outputs.CACHE_KEY_INFRA }}
      env:
        RUNS_ON_S3_BUCKET_CACHE: ${{ inputs.RUNS_ON_S3_BUCKET_CACHE }}

    - name: Yarn install (root)
      working-directory: ${{ inputs.working-directory }}
      if: steps.restore-cache-root.outputs.cache-hit != 'true'
      shell: bash
      run: yarn install --immutable

    - name: Yarn install (infra)
      working-directory: ./infra
      if: steps.restore-cache-infra.outputs.cache-hit != 'true'
      shell: bash
      run: yarn install --immutable

    - name: Cache Dependencies (root)
      uses: actions/cache/save@v4
      if: steps.restore-cache-root.outputs.cache-hit != 'true'
      with:
        path: |
          ${{ steps.yarn-cache-dir-path.outputs.dir }}
          ${{ env.CYPRESS_CACHE_FOLDER }}
        key: ${{ steps.set-cache-key.outputs.CACHE_KEY }}
      env:
        CYPRESS_CACHE_FOLDER: ${{ github.workspace }}/.cypress-cache

    - name: Cache Dependencies (infra)
      uses: actions/cache/save@v4
      if: steps.restore-cache-infra.outputs.cache-hit != 'true'
      with:
        path: ${{ steps.yarn-cache-dir-path-infra.outputs.dir }}
        key: ${{ steps.set-cache-key.outputs.CACHE_KEY_INFRA }}
