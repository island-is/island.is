name: 'Setup yarn'
description: 'Yarn setup and install dependencies'
inputs:
  cache-bucket:
    description: 'Bucket to use as cache (for RunsOn action cache)'
    required: false
  working-directory:
    description: 'Directory to run the action in'
    required: false
    default: '.'

runs:
  using: 'composite'
  steps:
    - name: Ensure inputs
      shell: bash
      run: echo "${{ inputs.cache-bucket }}" | grep '.' || env | grep 'CACHE_BUCKET'

    - name: Corepack
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        corepack enable

    - name: Set cache key
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      id: set-cache
      run: |
        echo "CACHE_KEY=${{ runner.os }}-deps-cypress-${{ hashFiles('yarn.lock') }}-1" >> $GITHUB_OUTPUT
        echo "CYPRESS_CACHE_PATH=${{ github.workspace }}/.cache/cypress" >> "$GITHUB_OUTPUT"
        echo "YARN_CACHE_PATH=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT
        echo "YARN_INFRA_CACHE_PATH=$(cd infra && yarn config get cacheFolder)" >> $GITHUB_OUTPUT

    - name: Cache Dependencies
      uses: runs-on/cache@v4
      id: cache-deps
      with:
        path: |
          ${{ steps.set-cache.outputs.YARN_CACHE_PATH }}
          ${{ steps.set-cache.outputs.YARN_INFRA_CACHE_PATH }}
          ${{ steps.set-cache.outputs.CYPRESS_CACHE_PATH }}
        key: ${{ steps.set-cache.outputs.CACHE_KEY }}
      env:
        # RUNS_ON_S3_BUCKET_CACHE: ${{ inputs.cache-bucket }}
        AWS_REGION: eu-west-1

    - name: EXIT
      shell: bash
      run: exit 1

    - name: Corepack
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        corepack enable

    - name: Check node version
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      run: |
        set -euo pipefail
        node -v
        yarn --version
        ls -l "$(which node)"

    - name: Set cache key
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      id: set-cache
      run: |
        echo "CACHE_KEY=${{ runner.os }}-deps-cypress-${{ hashFiles('yarn.lock') }}-1" >> $GITHUB_OUTPUT
        echo "CYPRESS_CACHE_PATH=${{ github.workspace }}/.cache/cypress" >> "$GITHUB_OUTPUT"
        echo "YARN_CACHE_PATH=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT
        echo "YARN_INFRA_CACHE_PATH=$(cd infra && yarn config get cacheFolder)" >> $GITHUB_OUTPUT

    - name: Restore Dependencies Cache
      uses: runs-on/cache@v4
      id: restore-cache
      with:
        path: |
          ${{ steps.set-cache.outputs.YARN_CACHE_PATH }}
          ${{ steps.set-cache.outputs.YARN_INFRA_CACHE_PATH }}
          ${{ steps.set-cache.outputs.CYPRESS_CACHE_PATH }}
        key: ${{ steps.set-cache.outputs.CACHE_KEY }}
      env:
        RUNS_ON_S3_BUCKET_CACHE: ${{ inputs.cache-bucket }}
        AWS_REGION: eu-west-1

    - name: Yarn install
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      env:
        YARN_ENABLE_HARDENED_MODE: 0
      run: |
        yarn install --immutable

    - name: Yarn install (infra)
      working-directory: ${{ inputs.working-directory }}/infra
      shell: bash
      env:
        YARN_ENABLE_HARDENED_MODE: 0
      run: |
        yarn install --immutable

    # - name: Cache Dependencies
    #   uses: runs-on/cache/save@v4
    #   if: ${{ steps.restore-cache.outputs.cache-hit != 'true' }}
    #   with:
    #     path: |
    #       ${{ steps.set-cache.outputs.YARN_CACHE_PATH }}
    #       ${{ steps.set-cache.outputs.YARN_INFRA_CACHE_PATH }}
    #       ${{ steps.set-cache.outputs.CYPRESS_CACHE_PATH }}
    #     key: ${{ steps.set-cache.outputs.CACHE_KEY }}
    #   env:
    #     RUNS_ON_S3_BUCKET_CACHE: ${{ inputs.cache-bucket }}
    #     AWS_REGION: eu-west-1
